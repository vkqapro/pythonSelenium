{"uid":"19522bf7c6ca1aa4","name":"Log out from Trello account","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_log_out","historyId":"9eddea92aa33bc4ffb54b4788932f508","time":{"start":1738995284418,"stop":1738995311417,"duration":26999},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: aborted by navigation: loader has changed while resolving nodes\n  (Session info: chrome=133.0.6943.53)\nStacktrace:\n#0 0x55d386c2753a <unknown>\n#1 0x55d386722f00 <unknown>\n#2 0x55d386727c41 <unknown>\n#3 0x55d38672b578 <unknown>\n#4 0x55d38672b603 <unknown>\n#5 0x55d3867b907c <unknown>\n#6 0x55d3867b8c97 <unknown>\n#7 0x55d3867975a2 <unknown>\n#8 0x55d3867b5f84 <unknown>\n#9 0x55d386797343 <unknown>\n#10 0x55d38676478a <unknown>\n#11 0x55d3867659de <unknown>\n#12 0x55d386bf12cb <unknown>\n#13 0x55d386bf5242 <unknown>\n#14 0x55d386bde7ac <unknown>\n#15 0x55d386bf5df7 <unknown>\n#16 0x55d386bc2b2f <unknown>\n#17 0x55d386c161a8 <unknown>\n#18 0x55d386c16370 <unknown>\n#19 0x55d386c263b6 <unknown>\n#20 0x7fac5749ca94 <unknown>\n#21 0x7fac57529c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f0a03b4ee40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0327f8d577aeb87be1ee66388c664852\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC010\n    @allure.title('Log out from Trello account')\n    def test_log_out(self, driver):\n        time.sleep(10)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Log out from Trello account'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Account.ACCOUNT_MENU))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Account.LOG_OU_BUTTON))).click()\n            time.sleep(2)\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Account.LOG_OU_BUTTON))).click()\n        with allure.step('Verify that the user is logged out and located at Trello.com/home page'):\n>           assert WebDriverWait(driver, 15).until(EC.url_to_be('https://trello.com/home'))\n\ntests/regression_ui/test_ui_regression.py:309: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:125: in _predicate\n    return url == driver.current_url\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:474: in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0a03b55130>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"aborted by navigation\",\"message\":\"aborted by navigation: loader has chang...\\\\n#19 0x55d386c263b6 \\\\u003Cunknown>\\\\n#20 0x7fac5749ca94 \\\\u003Cunknown>\\\\n#21 0x7fac57529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: aborted by navigation: loader has changed while resolving nodes\nE         (Session info: chrome=133.0.6943.53)\nE       Stacktrace:\nE       #0 0x55d386c2753a <unknown>\nE       #1 0x55d386722f00 <unknown>\nE       #2 0x55d386727c41 <unknown>\nE       #3 0x55d38672b578 <unknown>\nE       #4 0x55d38672b603 <unknown>\nE       #5 0x55d3867b907c <unknown>\nE       #6 0x55d3867b8c97 <unknown>\nE       #7 0x55d3867975a2 <unknown>\nE       #8 0x55d3867b5f84 <unknown>\nE       #9 0x55d386797343 <unknown>\nE       #10 0x55d38676478a <unknown>\nE       #11 0x55d3867659de <unknown>\nE       #12 0x55d386bf12cb <unknown>\nE       #13 0x55d386bf5242 <unknown>\nE       #14 0x55d386bde7ac <unknown>\nE       #15 0x55d386bf5df7 <unknown>\nE       #16 0x55d386bc2b2f <unknown>\nE       #17 0x55d386c161a8 <unknown>\nE       #18 0x55d386c16370 <unknown>\nE       #19 0x55d386c263b6 <unknown>\nE       #20 0x7fac5749ca94 <unknown>\nE       #21 0x7fac57529c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1738995284050,"stop":1738995284418,"duration":368},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1738995284418,"stop":1738995284418,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: aborted by navigation: loader has changed while resolving nodes\n  (Session info: chrome=133.0.6943.53)\nStacktrace:\n#0 0x55d386c2753a <unknown>\n#1 0x55d386722f00 <unknown>\n#2 0x55d386727c41 <unknown>\n#3 0x55d38672b578 <unknown>\n#4 0x55d38672b603 <unknown>\n#5 0x55d3867b907c <unknown>\n#6 0x55d3867b8c97 <unknown>\n#7 0x55d3867975a2 <unknown>\n#8 0x55d3867b5f84 <unknown>\n#9 0x55d386797343 <unknown>\n#10 0x55d38676478a <unknown>\n#11 0x55d3867659de <unknown>\n#12 0x55d386bf12cb <unknown>\n#13 0x55d386bf5242 <unknown>\n#14 0x55d386bde7ac <unknown>\n#15 0x55d386bf5df7 <unknown>\n#16 0x55d386bc2b2f <unknown>\n#17 0x55d386c161a8 <unknown>\n#18 0x55d386c16370 <unknown>\n#19 0x55d386c263b6 <unknown>\n#20 0x7fac5749ca94 <unknown>\n#21 0x7fac57529c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f0a03b4ee40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0327f8d577aeb87be1ee66388c664852\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC010\n    @allure.title('Log out from Trello account')\n    def test_log_out(self, driver):\n        time.sleep(10)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Log out from Trello account'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Account.ACCOUNT_MENU))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Account.LOG_OU_BUTTON))).click()\n            time.sleep(2)\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Account.LOG_OU_BUTTON))).click()\n        with allure.step('Verify that the user is logged out and located at Trello.com/home page'):\n>           assert WebDriverWait(driver, 15).until(EC.url_to_be('https://trello.com/home'))\n\ntests/regression_ui/test_ui_regression.py:309: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:125: in _predicate\n    return url == driver.current_url\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:474: in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0a03b55130>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"aborted by navigation\",\"message\":\"aborted by navigation: loader has chang...\\\\n#19 0x55d386c263b6 \\\\u003Cunknown>\\\\n#20 0x7fac5749ca94 \\\\u003Cunknown>\\\\n#21 0x7fac57529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: aborted by navigation: loader has changed while resolving nodes\nE         (Session info: chrome=133.0.6943.53)\nE       Stacktrace:\nE       #0 0x55d386c2753a <unknown>\nE       #1 0x55d386722f00 <unknown>\nE       #2 0x55d386727c41 <unknown>\nE       #3 0x55d38672b578 <unknown>\nE       #4 0x55d38672b603 <unknown>\nE       #5 0x55d3867b907c <unknown>\nE       #6 0x55d3867b8c97 <unknown>\nE       #7 0x55d3867975a2 <unknown>\nE       #8 0x55d3867b5f84 <unknown>\nE       #9 0x55d386797343 <unknown>\nE       #10 0x55d38676478a <unknown>\nE       #11 0x55d3867659de <unknown>\nE       #12 0x55d386bf12cb <unknown>\nE       #13 0x55d386bf5242 <unknown>\nE       #14 0x55d386bde7ac <unknown>\nE       #15 0x55d386bf5df7 <unknown>\nE       #16 0x55d386bc2b2f <unknown>\nE       #17 0x55d386c161a8 <unknown>\nE       #18 0x55d386c16370 <unknown>\nE       #19 0x55d386c263b6 <unknown>\nE       #20 0x7fac5749ca94 <unknown>\nE       #21 0x7fac57529c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","steps":[{"name":"Log in to Trello account","time":{"start":1738995294419,"stop":1738995307762,"duration":13343},"status":"passed","steps":[{"name":"Navigate to the Trello page and enter valid credentials (email, password, and 6-digits verification code)","time":{"start":1738995294419,"stop":1738995307762,"duration":13343},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Log out from Trello account","time":{"start":1738995307762,"stop":1738995310741,"duration":2979},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify that the user is logged out and located at Trello.com/home page","time":{"start":1738995310741,"stop":1738995311416,"duration":675},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: aborted by navigation: loader has changed while resolving nodes\n  (Session info: chrome=133.0.6943.53)\nStacktrace:\n#0 0x55d386c2753a <unknown>\n#1 0x55d386722f00 <unknown>\n#2 0x55d386727c41 <unknown>\n#3 0x55d38672b578 <unknown>\n#4 0x55d38672b603 <unknown>\n#5 0x55d3867b907c <unknown>\n#6 0x55d3867b8c97 <unknown>\n#7 0x55d3867975a2 <unknown>\n#8 0x55d3867b5f84 <unknown>\n#9 0x55d386797343 <unknown>\n#10 0x55d38676478a <unknown>\n#11 0x55d3867659de <unknown>\n#12 0x55d386bf12cb <unknown>\n#13 0x55d386bf5242 <unknown>\n#14 0x55d386bde7ac <unknown>\n#15 0x55d386bf5df7 <unknown>\n#16 0x55d386bc2b2f <unknown>\n#17 0x55d386c161a8 <unknown>\n#18 0x55d386c16370 <unknown>\n#19 0x55d386c263b6 <unknown>\n#20 0x7fac5749ca94 <unknown>\n#21 0x7fac57529c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 309, in test_log_out\n    assert WebDriverWait(driver, 15).until(EC.url_to_be('https://trello.com/home'))\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 125, in _predicate\n    return url == driver.current_url\n                  ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 474, in current_url\n    return self.execute(Command.GET_CURRENT_URL)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"13074af3fb10597a","name":"log","source":"13074af3fb10597a.txt","type":"text/plain","size":360}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1738995311505,"stop":1738995311583,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"TC010"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az1695-390"},{"name":"thread","value":"4108-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":208,"unknown":0,"total":216},"items":[{"uid":"20ff7ea828881abd","status":"passed","time":{"start":1738984516588,"stop":1738984536701,"duration":20113}},{"uid":"fe0740c2b55aaebf","status":"passed","time":{"start":1738975426984,"stop":1738975447637,"duration":20653}},{"uid":"e404bb29444dc606","status":"passed","time":{"start":1738962708745,"stop":1738962728349,"duration":19604}},{"uid":"6124798410abc14a","status":"passed","time":{"start":1738952177189,"stop":1738952196885,"duration":19696}},{"uid":"4b9098a8e2459265","status":"passed","time":{"start":1738941229427,"stop":1738941248899,"duration":19472}},{"uid":"6dd54f9b48edd58c","status":"passed","time":{"start":1738930753874,"stop":1738930778717,"duration":24843}},{"uid":"b0e7971ce2b31109","status":"passed","time":{"start":1738919600945,"stop":1738919620231,"duration":19286}},{"uid":"8bb4df289c0fa73a","status":"passed","time":{"start":1738909037527,"stop":1738909056939,"duration":19412}},{"uid":"7111e45a28d91729","status":"passed","time":{"start":1738898357432,"stop":1738898376903,"duration":19471}},{"uid":"64c7faf7c2de3285","status":"passed","time":{"start":1738889031578,"stop":1738889051186,"duration":19608}},{"uid":"7ad7cd0994b1c382","status":"passed","time":{"start":1738876339243,"stop":1738876360522,"duration":21279}},{"uid":"b727b8e697e1d099","status":"passed","time":{"start":1738865746704,"stop":1738865771890,"duration":25186}},{"uid":"40b33e9741e93246","status":"passed","time":{"start":1738854798080,"stop":1738854819248,"duration":21168}},{"uid":"e8ee42f874f25675","status":"passed","time":{"start":1738844476868,"stop":1738844497053,"duration":20185}},{"uid":"93742f9bde419e31","status":"passed","time":{"start":1738833228893,"stop":1738833248853,"duration":19960}},{"uid":"6d568ea9ed228232","status":"passed","time":{"start":1738822605748,"stop":1738822631434,"duration":25686}},{"uid":"c85e6ea61478afce","status":"passed","time":{"start":1738811809232,"stop":1738811830892,"duration":21660}},{"uid":"4bbe400d8cb0dc98","status":"passed","time":{"start":1738802655215,"stop":1738802681701,"duration":26486}},{"uid":"59f5081b8aeff367","status":"passed","time":{"start":1738789935622,"stop":1738789961025,"duration":25403}},{"uid":"44f4958f75125502","status":"passed","time":{"start":1738779375782,"stop":1738779402182,"duration":26400}}]},"tags":["TC010","TC000"]},"source":"19522bf7c6ca1aa4.json","parameterValues":[]}