{"uid":"f960607ce9e25ac6","name":"Login Functionality","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_login","historyId":"40148fdc4e6f84528498feb65b445c77","time":{"start":1738703278349,"stop":1738703278349,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55ccf10c7dca <unknown>\n#1 0x55ccf0bbe3f0 <unknown>\n#2 0x55ccf0bf547a <unknown>\n#3 0x55ccf0bf19b6 <unknown>\n#4 0x55ccf0c3eca6 <unknown>\n#5 0x55ccf0c3e2f6 <unknown>\n#6 0x55ccf0c32833 <unknown>\n#7 0x55ccf0bff5a0 <unknown>\n#8 0x55ccf0c00ece <unknown>\n#9 0x55ccf1091bdb <unknown>\n#10 0x55ccf1095b67 <unknown>\n#11 0x55ccf107d3bc <unknown>\n#12 0x55ccf1096727 <unknown>\n#13 0x55ccf106174f <unknown>\n#14 0x55ccf10b6938 <unknown>\n#15 0x55ccf10b6b00 <unknown>\n#16 0x55ccf10c6c46 <unknown>\n#17 0x7ffb96c9ca94 <unknown>\n#18 0x7ffb96d29c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0233b0>\nrequest = <SubRequest 'driver' for <Function test_login>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df00f410>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55ccf10c6c46 \\\\u003Cunknown>\\\\n#17 0x7ffb96c9ca94 \\\\u003Cunknown>\\\\n#18 0x7ffb96d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55ccf10c7dca <unknown>\nE       #1 0x55ccf0bbe3f0 <unknown>\nE       #2 0x55ccf0bf547a <unknown>\nE       #3 0x55ccf0bf19b6 <unknown>\nE       #4 0x55ccf0c3eca6 <unknown>\nE       #5 0x55ccf0c3e2f6 <unknown>\nE       #6 0x55ccf0c32833 <unknown>\nE       #7 0x55ccf0bff5a0 <unknown>\nE       #8 0x55ccf0c00ece <unknown>\nE       #9 0x55ccf1091bdb <unknown>\nE       #10 0x55ccf1095b67 <unknown>\nE       #11 0x55ccf107d3bc <unknown>\nE       #12 0x55ccf1096727 <unknown>\nE       #13 0x55ccf106174f <unknown>\nE       #14 0x55ccf10b6938 <unknown>\nE       #15 0x55ccf10b6b00 <unknown>\nE       #16 0x55ccf10c6c46 <unknown>\nE       #17 0x7ffb96c9ca94 <unknown>\nE       #18 0x7ffb96d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1738703278350,"stop":1738703278714,"duration":364},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55ccf10c7dca <unknown>\n#1 0x55ccf0bbe3f0 <unknown>\n#2 0x55ccf0bf547a <unknown>\n#3 0x55ccf0bf19b6 <unknown>\n#4 0x55ccf0c3eca6 <unknown>\n#5 0x55ccf0c3e2f6 <unknown>\n#6 0x55ccf0c32833 <unknown>\n#7 0x55ccf0bff5a0 <unknown>\n#8 0x55ccf0c00ece <unknown>\n#9 0x55ccf1091bdb <unknown>\n#10 0x55ccf1095b67 <unknown>\n#11 0x55ccf107d3bc <unknown>\n#12 0x55ccf1096727 <unknown>\n#13 0x55ccf106174f <unknown>\n#14 0x55ccf10b6938 <unknown>\n#15 0x55ccf10b6b00 <unknown>\n#16 0x55ccf10c6c46 <unknown>\n#17 0x7ffb96c9ca94 <unknown>\n#18 0x7ffb96d29c3c <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 46, in driver\n    driver = webdriver.Chrome(options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 241, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 329, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55ccf10c7dca <unknown>\n#1 0x55ccf0bbe3f0 <unknown>\n#2 0x55ccf0bf547a <unknown>\n#3 0x55ccf0bf19b6 <unknown>\n#4 0x55ccf0c3eca6 <unknown>\n#5 0x55ccf0c3e2f6 <unknown>\n#6 0x55ccf0c32833 <unknown>\n#7 0x55ccf0bff5a0 <unknown>\n#8 0x55ccf0c00ece <unknown>\n#9 0x55ccf1091bdb <unknown>\n#10 0x55ccf1095b67 <unknown>\n#11 0x55ccf107d3bc <unknown>\n#12 0x55ccf1096727 <unknown>\n#13 0x55ccf106174f <unknown>\n#14 0x55ccf10b6938 <unknown>\n#15 0x55ccf10b6b00 <unknown>\n#16 0x55ccf10c6c46 <unknown>\n#17 0x7ffb96c9ca94 <unknown>\n#18 0x7ffb96d29c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0233b0>\nrequest = <SubRequest 'driver' for <Function test_login>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df00f410>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55ccf10c6c46 \\\\u003Cunknown>\\\\n#17 0x7ffb96c9ca94 \\\\u003Cunknown>\\\\n#18 0x7ffb96d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55ccf10c7dca <unknown>\nE       #1 0x55ccf0bbe3f0 <unknown>\nE       #2 0x55ccf0bf547a <unknown>\nE       #3 0x55ccf0bf19b6 <unknown>\nE       #4 0x55ccf0c3eca6 <unknown>\nE       #5 0x55ccf0c3e2f6 <unknown>\nE       #6 0x55ccf0c32833 <unknown>\nE       #7 0x55ccf0bff5a0 <unknown>\nE       #8 0x55ccf0c00ece <unknown>\nE       #9 0x55ccf1091bdb <unknown>\nE       #10 0x55ccf1095b67 <unknown>\nE       #11 0x55ccf107d3bc <unknown>\nE       #12 0x55ccf1096727 <unknown>\nE       #13 0x55ccf106174f <unknown>\nE       #14 0x55ccf10b6938 <unknown>\nE       #15 0x55ccf10b6b00 <unknown>\nE       #16 0x55ccf10c6c46 <unknown>\nE       #17 0x7ffb96c9ca94 <unknown>\nE       #18 0x7ffb96d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","steps":[],"attachments":[{"uid":"6e28c85ad27d8207","name":"log","source":"6e28c85ad27d8207.txt","type":"text/plain","size":360}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"TC001"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az2027-548"},{"name":"thread","value":"4040-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":211,"unknown":0,"total":215},"items":[{"uid":"3e3fb442a74a8a54","status":"passed","time":{"start":1738697589183,"stop":1738697595941,"duration":6758}},{"uid":"3deaef8a1667a7ff","status":"passed","time":{"start":1738692723195,"stop":1738692730143,"duration":6948}},{"uid":"c1a2788d54ea19b1","status":"passed","time":{"start":1738681725982,"stop":1738681732999,"duration":7017}},{"uid":"29fce94703cfd723","status":"passed","time":{"start":1738671339123,"stop":1738671346844,"duration":7721}},{"uid":"bb92ce523fb8ecd7","status":"passed","time":{"start":1738660166158,"stop":1738660174326,"duration":8168}},{"uid":"a478a4461a8245de","status":"passed","time":{"start":1738649648153,"stop":1738649655515,"duration":7362}},{"uid":"556a8fd3aa6371d2","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id='otpCode-uid2-error']\"}\n  (Session info: chrome=132.0.6834.159); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55c3af91bdca <unknown>\n#1 0x55c3af4123f0 <unknown>\n#2 0x55c3af46210c <unknown>\n#3 0x55c3af462331 <unknown>\n#4 0x55c3af4a8154 <unknown>\n#5 0x55c3af486abd <unknown>\n#6 0x55c3af4a54b3 <unknown>\n#7 0x55c3af486833 <unknown>\n#8 0x55c3af4535a0 <unknown>\n#9 0x55c3af454ece <unknown>\n#10 0x55c3af8e5bdb <unknown>\n#11 0x55c3af8e9b67 <unknown>\n#12 0x55c3af8d13bc <unknown>\n#13 0x55c3af8ea727 <unknown>\n#14 0x55c3af8b574f <unknown>\n#15 0x55c3af90a938 <unknown>\n#16 0x55c3af90ab00 <unknown>\n#17 0x55c3af91ac46 <unknown>\n#18 0x7f192329ca94 <unknown>\n#19 0x7f1923329c3c <unknown>","time":{"start":1738635221379,"stop":1738635237088,"duration":15709}},{"uid":"97d370658d438885","status":"passed","time":{"start":1738629994992,"stop":1738630012546,"duration":17554}},{"uid":"4f1ec0e6eefec3b0","status":"passed","time":{"start":1738616963614,"stop":1738616981064,"duration":17450}},{"uid":"f773ea5333d0f0ab","status":"passed","time":{"start":1738606422250,"stop":1738606439714,"duration":17464}},{"uid":"eded22a2b39b097d","status":"passed","time":{"start":1738595422539,"stop":1738595440048,"duration":17509}},{"uid":"be744f35cfbbdd37","status":"passed","time":{"start":1738585178419,"stop":1738585196092,"duration":17673}},{"uid":"23ddbfa0590841eb","status":"passed","time":{"start":1738573917804,"stop":1738573935269,"duration":17465}},{"uid":"e97e910ffb90c1bb","status":"passed","time":{"start":1738563274018,"stop":1738563291582,"duration":17564}},{"uid":"e23e1c8dac390442","status":"passed","time":{"start":1738552447982,"stop":1738552465468,"duration":17486}},{"uid":"590388bda897af","status":"passed","time":{"start":1738543674893,"stop":1738543692456,"duration":17563}},{"uid":"6b18643c7fedc5f7","status":"passed","time":{"start":1738530499176,"stop":1738530516788,"duration":17612}},{"uid":"5864a6c5d6c25458","status":"passed","time":{"start":1738519916017,"stop":1738519933625,"duration":17608}},{"uid":"68752cf688f41939","status":"passed","time":{"start":1738509004525,"stop":1738509022042,"duration":17517}},{"uid":"a78de2c9e8ae115c","status":"passed","time":{"start":1738498546949,"stop":1738498564462,"duration":17513}}]},"tags":["TC001","TC000"]},"source":"f960607ce9e25ac6.json","parameterValues":[]}