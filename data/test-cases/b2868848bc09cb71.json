{"uid":"b2868848bc09cb71","name":"Label a Card","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_label_card","historyId":"81bf587fe9f2db9e87ee2dc06e7308b0","time":{"start":1735088780728,"stop":1735088812445,"duration":31717},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x558af681231a <unknown>\n#1 0x558af63286e0 <unknown>\n#2 0x558af637e0f6 <unknown>\n#3 0x558af637c05d <unknown>\n#4 0x558af6379775 <unknown>\n#5 0x558af637892f <unknown>\n#6 0x558af636c0d5 <unknown>\n#7 0x558af639b462 <unknown>\n#8 0x558af636ba18 <unknown>\n#9 0x558af639b62e <unknown>\n#10 0x558af63b9ed7 <unknown>\n#11 0x558af639b203 <unknown>\n#12 0x558af6369cc0 <unknown>\n#13 0x558af636ac9e <unknown>\n#14 0x558af67dfd0b <unknown>\n#15 0x558af67e3c92 <unknown>\n#16 0x558af67ccb3c <unknown>\n#17 0x558af67e4807 <unknown>\n#18 0x558af67b20df <unknown>\n#19 0x558af6801578 <unknown>\n#20 0x558af6801740 <unknown>\n#21 0x558af6811196 <unknown>\n#22 0x7fdde3c9ca94 <unknown>\n#23 0x7fdde3d29c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f313afaa780>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6e0daaab07a034ba8a9b4d4b516e14e6\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC007\n    @allure.title('Label a Card')\n    def test_label_card(self, driver):\n        time.sleep(4)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open a board and select a card'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n            WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, self.SCC.Board.LIST_TITLE))).click()\n            driver.find_element(By.XPATH, self.SCC.List.ADD_A_CARD_BUTTON).click()\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).click()\n            time.sleep(1)\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).send_keys('new_card')\n            driver.find_element(By.XPATH, self.SCC.List.ADD_CARD_SUBMIT_BUTTOMN).click()\n            time.sleep(3)\n    \n        with allure.step('Click the card to open and archive it'):\n            driver.find_element(By.XPATH, self.SCC.List.CARD_TO_ARCHIVE).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABELS_BUTTON))).click()\n            time.sleep(2)\n>           WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n\ntests/regression_ui/test_ui_regression.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f313afb03b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x558af6811196 \\\\u003Cunknown>\\\\n#22 0x7fdde3c9ca94 \\\\u003Cunknown>\\\\n#23 0x7fdde3d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\nE         (Session info: chrome=131.0.6778.204)\nE       Stacktrace:\nE       #0 0x558af681231a <unknown>\nE       #1 0x558af63286e0 <unknown>\nE       #2 0x558af637e0f6 <unknown>\nE       #3 0x558af637c05d <unknown>\nE       #4 0x558af6379775 <unknown>\nE       #5 0x558af637892f <unknown>\nE       #6 0x558af636c0d5 <unknown>\nE       #7 0x558af639b462 <unknown>\nE       #8 0x558af636ba18 <unknown>\nE       #9 0x558af639b62e <unknown>\nE       #10 0x558af63b9ed7 <unknown>\nE       #11 0x558af639b203 <unknown>\nE       #12 0x558af6369cc0 <unknown>\nE       #13 0x558af636ac9e <unknown>\nE       #14 0x558af67dfd0b <unknown>\nE       #15 0x558af67e3c92 <unknown>\nE       #16 0x558af67ccb3c <unknown>\nE       #17 0x558af67e4807 <unknown>\nE       #18 0x558af67b20df <unknown>\nE       #19 0x558af6801578 <unknown>\nE       #20 0x558af6801740 <unknown>\nE       #21 0x558af6811196 <unknown>\nE       #22 0x7fdde3c9ca94 <unknown>\nE       #23 0x7fdde3d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1735088780471,"stop":1735088780727,"duration":256},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1735088780727,"stop":1735088780727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x558af681231a <unknown>\n#1 0x558af63286e0 <unknown>\n#2 0x558af637e0f6 <unknown>\n#3 0x558af637c05d <unknown>\n#4 0x558af6379775 <unknown>\n#5 0x558af637892f <unknown>\n#6 0x558af636c0d5 <unknown>\n#7 0x558af639b462 <unknown>\n#8 0x558af636ba18 <unknown>\n#9 0x558af639b62e <unknown>\n#10 0x558af63b9ed7 <unknown>\n#11 0x558af639b203 <unknown>\n#12 0x558af6369cc0 <unknown>\n#13 0x558af636ac9e <unknown>\n#14 0x558af67dfd0b <unknown>\n#15 0x558af67e3c92 <unknown>\n#16 0x558af67ccb3c <unknown>\n#17 0x558af67e4807 <unknown>\n#18 0x558af67b20df <unknown>\n#19 0x558af6801578 <unknown>\n#20 0x558af6801740 <unknown>\n#21 0x558af6811196 <unknown>\n#22 0x7fdde3c9ca94 <unknown>\n#23 0x7fdde3d29c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f313afaa780>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6e0daaab07a034ba8a9b4d4b516e14e6\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC007\n    @allure.title('Label a Card')\n    def test_label_card(self, driver):\n        time.sleep(4)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open a board and select a card'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n            WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, self.SCC.Board.LIST_TITLE))).click()\n            driver.find_element(By.XPATH, self.SCC.List.ADD_A_CARD_BUTTON).click()\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).click()\n            time.sleep(1)\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).send_keys('new_card')\n            driver.find_element(By.XPATH, self.SCC.List.ADD_CARD_SUBMIT_BUTTOMN).click()\n            time.sleep(3)\n    \n        with allure.step('Click the card to open and archive it'):\n            driver.find_element(By.XPATH, self.SCC.List.CARD_TO_ARCHIVE).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABELS_BUTTON))).click()\n            time.sleep(2)\n>           WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n\ntests/regression_ui/test_ui_regression.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f313afb03b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x558af6811196 \\\\u003Cunknown>\\\\n#22 0x7fdde3c9ca94 \\\\u003Cunknown>\\\\n#23 0x7fdde3d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\nE         (Session info: chrome=131.0.6778.204)\nE       Stacktrace:\nE       #0 0x558af681231a <unknown>\nE       #1 0x558af63286e0 <unknown>\nE       #2 0x558af637e0f6 <unknown>\nE       #3 0x558af637c05d <unknown>\nE       #4 0x558af6379775 <unknown>\nE       #5 0x558af637892f <unknown>\nE       #6 0x558af636c0d5 <unknown>\nE       #7 0x558af639b462 <unknown>\nE       #8 0x558af636ba18 <unknown>\nE       #9 0x558af639b62e <unknown>\nE       #10 0x558af63b9ed7 <unknown>\nE       #11 0x558af639b203 <unknown>\nE       #12 0x558af6369cc0 <unknown>\nE       #13 0x558af636ac9e <unknown>\nE       #14 0x558af67dfd0b <unknown>\nE       #15 0x558af67e3c92 <unknown>\nE       #16 0x558af67ccb3c <unknown>\nE       #17 0x558af67e4807 <unknown>\nE       #18 0x558af67b20df <unknown>\nE       #19 0x558af6801578 <unknown>\nE       #20 0x558af6801740 <unknown>\nE       #21 0x558af6811196 <unknown>\nE       #22 0x7fdde3c9ca94 <unknown>\nE       #23 0x7fdde3d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","steps":[{"name":"Log in to Trello account","time":{"start":1735088784728,"stop":1735088802106,"duration":17378},"status":"passed","steps":[{"name":"Navigate to the Trello login page","time":{"start":1735088784728,"stop":1735088787988,"duration":3260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter valid credentials (email, password, and 6-digits verification code)","time":{"start":1735088787988,"stop":1735088802105,"duration":14117},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Open a board and select a card","time":{"start":1735088802106,"stop":1735088808207,"duration":6101},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click the card to open and archive it","time":{"start":1735088808207,"stop":1735088812444,"duration":4237},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x558af681231a <unknown>\n#1 0x558af63286e0 <unknown>\n#2 0x558af637e0f6 <unknown>\n#3 0x558af637c05d <unknown>\n#4 0x558af6379775 <unknown>\n#5 0x558af637892f <unknown>\n#6 0x558af636c0d5 <unknown>\n#7 0x558af639b462 <unknown>\n#8 0x558af636ba18 <unknown>\n#9 0x558af639b62e <unknown>\n#10 0x558af63b9ed7 <unknown>\n#11 0x558af639b203 <unknown>\n#12 0x558af6369cc0 <unknown>\n#13 0x558af636ac9e <unknown>\n#14 0x558af67dfd0b <unknown>\n#15 0x558af67e3c92 <unknown>\n#16 0x558af67ccb3c <unknown>\n#17 0x558af67e4807 <unknown>\n#18 0x558af67b20df <unknown>\n#19 0x558af6801578 <unknown>\n#20 0x558af6801740 <unknown>\n#21 0x558af6811196 <unknown>\n#22 0x7fdde3c9ca94 <unknown>\n#23 0x7fdde3d29c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 234, in test_label_card\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"924019fbafb81326","name":"log","source":"924019fbafb81326.txt","type":"text/plain","size":50763}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1735088812474,"stop":1735088812556,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"TC007"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az1694-299"},{"name":"thread","value":"3606-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":35,"unknown":0,"total":42},"items":[{"uid":"d406e3d826cc08e0","status":"passed","time":{"start":1735064451303,"stop":1735064484807,"duration":33504}},{"uid":"b658d1a3fc49482a","status":"passed","time":{"start":1735002374640,"stop":1735002408612,"duration":33972}},{"uid":"3569ddcabdee7341","status":"passed","time":{"start":1734978058991,"stop":1734978092991,"duration":34000}},{"uid":"dbfb1eafde3681e9","status":"passed","time":{"start":1734916056512,"stop":1734916090476,"duration":33964}},{"uid":"f29c98c02aead799","status":"passed","time":{"start":1734891576934,"stop":1734891611138,"duration":34204}},{"uid":"1067753ff408a86f","status":"passed","time":{"start":1734830029623,"stop":1734830063405,"duration":33782}},{"uid":"feca6eb8d3126a8","status":"passed","time":{"start":1734805181663,"stop":1734805215612,"duration":33949}},{"uid":"6edfedda15c36330","status":"passed","time":{"start":1734743120548,"stop":1734743154569,"duration":34021}},{"uid":"34fa9337763f257f","status":"passed","time":{"start":1734718870429,"stop":1734718904381,"duration":33952}},{"uid":"d79961e95c4b8ba5","status":"passed","time":{"start":1734656857661,"stop":1734656891585,"duration":33924}},{"uid":"2e2d9937ebaac968","status":"passed","time":{"start":1734632499848,"stop":1734632534064,"duration":34216}},{"uid":"f533d819aba01e88","status":"passed","time":{"start":1734570580727,"stop":1734570614829,"duration":34102}},{"uid":"efb1a5f6d0a0a011","status":"passed","time":{"start":1734546169994,"stop":1734546204233,"duration":34239}},{"uid":"4702dfec9300fb36","status":"passed","time":{"start":1734484138255,"stop":1734484172287,"duration":34032}},{"uid":"936b8d6533e63652","status":"passed","time":{"start":1734459812828,"stop":1734459847041,"duration":34213}},{"uid":"540e8386d1446ac8","status":"passed","time":{"start":1734397916235,"stop":1734397950134,"duration":33899}},{"uid":"58ee259c55533553","status":"passed","time":{"start":1734373412155,"stop":1734373446472,"duration":34317}},{"uid":"3a8ab929f5dae18b","status":"passed","time":{"start":1734311707170,"stop":1734311741479,"duration":34309}},{"uid":"c098470008eb8062","status":"passed","time":{"start":1734286862206,"stop":1734286896469,"duration":34263}},{"uid":"9dab77e8651496f1","status":"passed","time":{"start":1734225421166,"stop":1734225455393,"duration":34227}}]},"tags":["TC007","TC000"]},"source":"b2868848bc09cb71.json","parameterValues":[]}