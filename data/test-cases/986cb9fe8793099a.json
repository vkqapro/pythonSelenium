{"uid":"986cb9fe8793099a","name":"Board Deletion","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_board_deletion","historyId":"4bab3c1ca3a9b77bdca99b9a1a8bf44f","time":{"start":1735410110828,"stop":1735410144272,"duration":33444},"status":"failed","statusMessage":"AssertionError: assert (0 - 2) == 0","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f04900b2750>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7503096ffeb49ebaaa29f48c944d3caf\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC009\n    @allure.title('Board Deletion')\n    def test_board_deletion(self, driver):\n        time.sleep(5)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open board'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n    \n        with allure.step('Click \"More\" and select \"Close Board, then delete the board permanently\"'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.SHOW_MENU))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_CLOSE_BOARD))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_PROVE_CLOSE_BOARD))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_PERMANENT_DELETE))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_CONFIRM_PERMANENT_DELETE))).click()\n    \n        with allure.step(\"Verify board's deletion\"):\n            time.sleep(4)\n            driver.find_element(By.XPATH, self.SCC.HomePage.BOARDS_BUTTON).click()\n            time.sleep(3)\n            active_boards = driver.find_elements(By.XPATH, self.SCC.HomePage.CHECK_ACTIVE_BOARDS)\n            active_boards_count = len(active_boards)\n            log.info('====' * 50)\n            log.info(active_boards_count - 2)\n>           assert active_boards_count - 2 == 0\nE           assert (0 - 2) == 0\n\ntests/regression_ui/test_ui_regression.py:283: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1735410110560,"stop":1735410110827,"duration":267},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1735410110827,"stop":1735410110828,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (0 - 2) == 0","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f04900b2750>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7503096ffeb49ebaaa29f48c944d3caf\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC009\n    @allure.title('Board Deletion')\n    def test_board_deletion(self, driver):\n        time.sleep(5)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open board'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n    \n        with allure.step('Click \"More\" and select \"Close Board, then delete the board permanently\"'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.SHOW_MENU))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_CLOSE_BOARD))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_PROVE_CLOSE_BOARD))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_PERMANENT_DELETE))).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.IN_MENU_CONFIRM_PERMANENT_DELETE))).click()\n    \n        with allure.step(\"Verify board's deletion\"):\n            time.sleep(4)\n            driver.find_element(By.XPATH, self.SCC.HomePage.BOARDS_BUTTON).click()\n            time.sleep(3)\n            active_boards = driver.find_elements(By.XPATH, self.SCC.HomePage.CHECK_ACTIVE_BOARDS)\n            active_boards_count = len(active_boards)\n            log.info('====' * 50)\n            log.info(active_boards_count - 2)\n>           assert active_boards_count - 2 == 0\nE           assert (0 - 2) == 0\n\ntests/regression_ui/test_ui_regression.py:283: AssertionError","steps":[{"name":"Log in to Trello account","time":{"start":1735410115828,"stop":1735410133286,"duration":17458},"status":"passed","steps":[{"name":"Navigate to the Trello login page","time":{"start":1735410115828,"stop":1735410119139,"duration":3311},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter valid credentials (email, password, and 6-digits verification code)","time":{"start":1735410119139,"stop":1735410133286,"duration":14147},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Open board","time":{"start":1735410133286,"stop":1735410133678,"duration":392},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click \"More\" and select \"Close Board, then delete the board permanently\"","time":{"start":1735410133678,"stop":1735410137047,"duration":3369},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Verify board's deletion","time":{"start":1735410137047,"stop":1735410144272,"duration":7225},"status":"failed","statusMessage":"AssertionError: assert (0 - 2) == 0\n","statusTrace":"  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 283, in test_board_deletion\n    assert active_boards_count - 2 == 0\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"573a11fa45f61b9d","name":"log","source":"573a11fa45f61b9d.txt","type":"text/plain","size":54730}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1735410144304,"stop":1735410144384,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"TC009"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az1692-895"},{"name":"thread","value":"3651-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":6,"skipped":0,"passed":9,"unknown":0,"total":42},"items":[{"uid":"59cd4b3126600095","status":"broken","statusDetails":"TypeError: not all arguments converted during string formatting","time":{"start":1735347947419,"stop":1735347979897,"duration":32478}},{"uid":"32631d82a923c37e","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1735323721239,"stop":1735323754221,"duration":32982}},{"uid":"85f7b412b80ee79e","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558078e5a31a <unknown>\n#1 0x5580789706e0 <unknown>\n#2 0x5580789bf3e6 <unknown>\n#3 0x5580789bf681 <unknown>\n#4 0x558078a04b04 <unknown>\n#5 0x5580789e348d <unknown>\n#6 0x558078a01ed7 <unknown>\n#7 0x5580789e3203 <unknown>\n#8 0x5580789b1cc0 <unknown>\n#9 0x5580789b2c9e <unknown>\n#10 0x558078e27d0b <unknown>\n#11 0x558078e2bc92 <unknown>\n#12 0x558078e14b3c <unknown>\n#13 0x558078e2c807 <unknown>\n#14 0x558078dfa0df <unknown>\n#15 0x558078e49578 <unknown>\n#16 0x558078e49740 <unknown>\n#17 0x558078e59196 <unknown>\n#18 0x7fec2589ca94 <unknown>\n#19 0x7fec25929c3c <unknown>","time":{"start":1735261721501,"stop":1735261754312,"duration":32811}},{"uid":"1693f7e801421763","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1735237320574,"stop":1735237353490,"duration":32916}},{"uid":"fad28afb5b4560a7","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1735175195450,"stop":1735175228807,"duration":33357}},{"uid":"8fc46c1a3673c67e","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1735150968692,"stop":1735151002028,"duration":33336}},{"uid":"d22da6bad799beb4","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1735088838175,"stop":1735088871002,"duration":32827}},{"uid":"525028874cfc8f6a","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1735064510266,"stop":1735064543623,"duration":33357}},{"uid":"c712012ad54502d4","status":"broken","statusDetails":"TypeError: not all arguments converted during string formatting","time":{"start":1735002434319,"stop":1735002466826,"duration":32507}},{"uid":"87d7f6823afb29b2","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734978119103,"stop":1734978152517,"duration":33414}},{"uid":"c933f7797d750249","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734916116203,"stop":1734916149587,"duration":33384}},{"uid":"139dd87bd605d1c8","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734891637174,"stop":1734891670378,"duration":33204}},{"uid":"3ad4c011314615e7","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734830089166,"stop":1734830122178,"duration":33012}},{"uid":"9af57053a01f17c","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734805241394,"stop":1734805274251,"duration":32857}},{"uid":"bf709bc0bff9e96","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734743180480,"stop":1734743213394,"duration":32914}},{"uid":"16838e72551e16d0","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734718930228,"stop":1734718963152,"duration":32924}},{"uid":"3b494b3351816af7","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734656917390,"stop":1734656950799,"duration":33409}},{"uid":"1cada077cfb8426e","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734632559874,"stop":1734632592873,"duration":32999}},{"uid":"f9baac13498d27a0","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734570640562,"stop":1734570674156,"duration":33594}},{"uid":"ae8b2b2be497580","status":"failed","statusDetails":"AssertionError: assert (0 - 2) == 0","time":{"start":1734546229908,"stop":1734546263528,"duration":33620}}]},"tags":["TC009","TC000"]},"source":"986cb9fe8793099a.json","parameterValues":[]}