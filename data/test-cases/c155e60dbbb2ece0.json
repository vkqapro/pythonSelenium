{"uid":"c155e60dbbb2ece0","name":"List Creation","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_list_creation","historyId":"49ea7f8ccb833cc0e7e10d54c5c5798b","time":{"start":1738703278999,"stop":1738703278999,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55d4f8e70dca <unknown>\n#1 0x55d4f89673f0 <unknown>\n#2 0x55d4f899e47a <unknown>\n#3 0x55d4f899a9b6 <unknown>\n#4 0x55d4f89e7ca6 <unknown>\n#5 0x55d4f89e72f6 <unknown>\n#6 0x55d4f89db833 <unknown>\n#7 0x55d4f89a85a0 <unknown>\n#8 0x55d4f89a9ece <unknown>\n#9 0x55d4f8e3abdb <unknown>\n#10 0x55d4f8e3eb67 <unknown>\n#11 0x55d4f8e263bc <unknown>\n#12 0x55d4f8e3f727 <unknown>\n#13 0x55d4f8e0a74f <unknown>\n#14 0x55d4f8e5f938 <unknown>\n#15 0x55d4f8e5fb00 <unknown>\n#16 0x55d4f8e6fc46 <unknown>\n#17 0x7f7fa929ca94 <unknown>\n#18 0x7f7fa9329c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0460f0>\nrequest = <SubRequest 'driver' for <Function test_list_creation>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df0495b0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55d4f8e6fc46 \\\\u003Cunknown>\\\\n#17 0x7f7fa929ca94 \\\\u003Cunknown>\\\\n#18 0x7f7fa9329c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55d4f8e70dca <unknown>\nE       #1 0x55d4f89673f0 <unknown>\nE       #2 0x55d4f899e47a <unknown>\nE       #3 0x55d4f899a9b6 <unknown>\nE       #4 0x55d4f89e7ca6 <unknown>\nE       #5 0x55d4f89e72f6 <unknown>\nE       #6 0x55d4f89db833 <unknown>\nE       #7 0x55d4f89a85a0 <unknown>\nE       #8 0x55d4f89a9ece <unknown>\nE       #9 0x55d4f8e3abdb <unknown>\nE       #10 0x55d4f8e3eb67 <unknown>\nE       #11 0x55d4f8e263bc <unknown>\nE       #12 0x55d4f8e3f727 <unknown>\nE       #13 0x55d4f8e0a74f <unknown>\nE       #14 0x55d4f8e5f938 <unknown>\nE       #15 0x55d4f8e5fb00 <unknown>\nE       #16 0x55d4f8e6fc46 <unknown>\nE       #17 0x7f7fa929ca94 <unknown>\nE       #18 0x7f7fa9329c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1738703278999,"stop":1738703279181,"duration":182},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55d4f8e70dca <unknown>\n#1 0x55d4f89673f0 <unknown>\n#2 0x55d4f899e47a <unknown>\n#3 0x55d4f899a9b6 <unknown>\n#4 0x55d4f89e7ca6 <unknown>\n#5 0x55d4f89e72f6 <unknown>\n#6 0x55d4f89db833 <unknown>\n#7 0x55d4f89a85a0 <unknown>\n#8 0x55d4f89a9ece <unknown>\n#9 0x55d4f8e3abdb <unknown>\n#10 0x55d4f8e3eb67 <unknown>\n#11 0x55d4f8e263bc <unknown>\n#12 0x55d4f8e3f727 <unknown>\n#13 0x55d4f8e0a74f <unknown>\n#14 0x55d4f8e5f938 <unknown>\n#15 0x55d4f8e5fb00 <unknown>\n#16 0x55d4f8e6fc46 <unknown>\n#17 0x7f7fa929ca94 <unknown>\n#18 0x7f7fa9329c3c <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 46, in driver\n    driver = webdriver.Chrome(options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 241, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 329, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55d4f8e70dca <unknown>\n#1 0x55d4f89673f0 <unknown>\n#2 0x55d4f899e47a <unknown>\n#3 0x55d4f899a9b6 <unknown>\n#4 0x55d4f89e7ca6 <unknown>\n#5 0x55d4f89e72f6 <unknown>\n#6 0x55d4f89db833 <unknown>\n#7 0x55d4f89a85a0 <unknown>\n#8 0x55d4f89a9ece <unknown>\n#9 0x55d4f8e3abdb <unknown>\n#10 0x55d4f8e3eb67 <unknown>\n#11 0x55d4f8e263bc <unknown>\n#12 0x55d4f8e3f727 <unknown>\n#13 0x55d4f8e0a74f <unknown>\n#14 0x55d4f8e5f938 <unknown>\n#15 0x55d4f8e5fb00 <unknown>\n#16 0x55d4f8e6fc46 <unknown>\n#17 0x7f7fa929ca94 <unknown>\n#18 0x7f7fa9329c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0460f0>\nrequest = <SubRequest 'driver' for <Function test_list_creation>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df0495b0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55d4f8e6fc46 \\\\u003Cunknown>\\\\n#17 0x7f7fa929ca94 \\\\u003Cunknown>\\\\n#18 0x7f7fa9329c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55d4f8e70dca <unknown>\nE       #1 0x55d4f89673f0 <unknown>\nE       #2 0x55d4f899e47a <unknown>\nE       #3 0x55d4f899a9b6 <unknown>\nE       #4 0x55d4f89e7ca6 <unknown>\nE       #5 0x55d4f89e72f6 <unknown>\nE       #6 0x55d4f89db833 <unknown>\nE       #7 0x55d4f89a85a0 <unknown>\nE       #8 0x55d4f89a9ece <unknown>\nE       #9 0x55d4f8e3abdb <unknown>\nE       #10 0x55d4f8e3eb67 <unknown>\nE       #11 0x55d4f8e263bc <unknown>\nE       #12 0x55d4f8e3f727 <unknown>\nE       #13 0x55d4f8e0a74f <unknown>\nE       #14 0x55d4f8e5f938 <unknown>\nE       #15 0x55d4f8e5fb00 <unknown>\nE       #16 0x55d4f8e6fc46 <unknown>\nE       #17 0x7f7fa929ca94 <unknown>\nE       #18 0x7f7fa9329c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","steps":[],"attachments":[{"uid":"70d8916288fbf732","name":"log","source":"70d8916288fbf732.txt","type":"text/plain","size":360}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"TC003"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az2027-548"},{"name":"thread","value":"4040-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":10,"skipped":0,"passed":197,"unknown":0,"total":208},"items":[{"uid":"400910bf3983914b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ca1f370dca <unknown>\n#1 0x55ca1ee673f0 <unknown>\n#2 0x55ca1eeb710c <unknown>\n#3 0x55ca1eeb7331 <unknown>\n#4 0x55ca1eefd154 <unknown>\n#5 0x55ca1eedbabd <unknown>\n#6 0x55ca1eefa4b3 <unknown>\n#7 0x55ca1eedb833 <unknown>\n#8 0x55ca1eea85a0 <unknown>\n#9 0x55ca1eea9ece <unknown>\n#10 0x55ca1f33abdb <unknown>\n#11 0x55ca1f33eb67 <unknown>\n#12 0x55ca1f3263bc <unknown>\n#13 0x55ca1f33f727 <unknown>\n#14 0x55ca1f30a74f <unknown>\n#15 0x55ca1f35f938 <unknown>\n#16 0x55ca1f35fb00 <unknown>\n#17 0x55ca1f36fc46 <unknown>\n#18 0x7efe0429ca94 <unknown>\n#19 0x7efe04329c3c <unknown>","time":{"start":1738697618362,"stop":1738697677673,"duration":59311}},{"uid":"c5f53d21d1ffa02","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564a0fdbbdca <unknown>\n#1 0x564a0f8b23f0 <unknown>\n#2 0x564a0f90210c <unknown>\n#3 0x564a0f902331 <unknown>\n#4 0x564a0f948154 <unknown>\n#5 0x564a0f926abd <unknown>\n#6 0x564a0f9454b3 <unknown>\n#7 0x564a0f926833 <unknown>\n#8 0x564a0f8f35a0 <unknown>\n#9 0x564a0f8f4ece <unknown>\n#10 0x564a0fd85bdb <unknown>\n#11 0x564a0fd89b67 <unknown>\n#12 0x564a0fd713bc <unknown>\n#13 0x564a0fd8a727 <unknown>\n#14 0x564a0fd5574f <unknown>\n#15 0x564a0fdaa938 <unknown>\n#16 0x564a0fdaab00 <unknown>\n#17 0x564a0fdbac46 <unknown>\n#18 0x7f5abc89ca94 <unknown>\n#19 0x7f5abc929c3c <unknown>","time":{"start":1738692757946,"stop":1738692817015,"duration":59069}},{"uid":"e13416784b373ca0","status":"passed","time":{"start":1738681754479,"stop":1738681783766,"duration":29287}},{"uid":"ce9585ffcc655acf","status":"passed","time":{"start":1738671369357,"stop":1738671404991,"duration":35634}},{"uid":"37ffa0015e8b98cb","status":"passed","time":{"start":1738660213104,"stop":1738660242492,"duration":29388}},{"uid":"65e07f3948c4819a","status":"passed","time":{"start":1738649683781,"stop":1738649713217,"duration":29436}},{"uid":"c21371dbbeb2a07a","status":"passed","time":{"start":1738630044813,"stop":1738630078800,"duration":33987}},{"uid":"c43d96e85245c112","status":"passed","time":{"start":1738617031543,"stop":1738617065755,"duration":34212}},{"uid":"d325ee7db6604373","status":"passed","time":{"start":1738606471889,"stop":1738606505980,"duration":34091}},{"uid":"2ce261e34c2232eb","status":"passed","time":{"start":1738595472536,"stop":1738595506716,"duration":34180}},{"uid":"38dee4b06a0c90d1","status":"passed","time":{"start":1738585228305,"stop":1738585262408,"duration":34103}},{"uid":"1162ce6a8df50a5a","status":"passed","time":{"start":1738573967629,"stop":1738574001695,"duration":34066}},{"uid":"dffd33d4133ddbbf","status":"passed","time":{"start":1738563323916,"stop":1738563358014,"duration":34098}},{"uid":"eb782a2f648aa4e7","status":"passed","time":{"start":1738552498028,"stop":1738552532135,"duration":34107}},{"uid":"d4c3c9b896e60232","status":"passed","time":{"start":1738543724765,"stop":1738543758777,"duration":34012}},{"uid":"2451a8d467f1a812","status":"passed","time":{"start":1738530549631,"stop":1738530583936,"duration":34305}},{"uid":"7d9c45961a9a0d79","status":"passed","time":{"start":1738519966044,"stop":1738520000206,"duration":34162}},{"uid":"87ebeeb6ae08c4ea","status":"passed","time":{"start":1738509054205,"stop":1738509088233,"duration":34028}},{"uid":"7e8fbf445796acfd","status":"passed","time":{"start":1738498596910,"stop":1738498631058,"duration":34148}},{"uid":"e3f725b98fef4164","status":"passed","time":{"start":1738487393357,"stop":1738487427533,"duration":34176}}]},"tags":["TC003","TC000"]},"source":"c155e60dbbb2ece0.json","parameterValues":[]}