{"uid":"47a54f3db392fdcf","name":"Label a Card","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_label_card","historyId":"81bf587fe9f2db9e87ee2dc06e7308b0","time":{"start":1742991625014,"stop":1742991644919,"duration":19905},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 176). Other element would receive the click: <div class=\"SHSLu7GBXRGV83\">...</div>\n  (Session info: chrome=134.0.6998.165)\nStacktrace:\n#0 0x55b356ce9a1a <unknown>\n#1 0x55b3567a1390 <unknown>\n#2 0x55b3567f9afc <unknown>\n#3 0x55b3567f795c <unknown>\n#4 0x55b3567f4ff2 <unknown>\n#5 0x55b3567f46f0 <unknown>\n#6 0x55b3567e6e0d <unknown>\n#7 0x55b356818bd2 <unknown>\n#8 0x55b3567e678a <unknown>\n#9 0x55b356818d9e <unknown>\n#10 0x55b35683f07b <unknown>\n#11 0x55b3568189a3 <unknown>\n#12 0x55b3567e460e <unknown>\n#13 0x55b3567e5dd1 <unknown>\n#14 0x55b356cafddb <unknown>\n#15 0x55b356cb3cbc <unknown>\n#16 0x55b356c97392 <unknown>\n#17 0x55b356cb4834 <unknown>\n#18 0x55b356c7b1ef <unknown>\n#19 0x55b356cd8038 <unknown>\n#20 0x55b356cd8216 <unknown>\n#21 0x55b356ce8896 <unknown>\n#22 0x7fa90169caa4 <unknown>\n#23 0x7fa901729c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7fdd04daa9c0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae01e514b620970b84b6d8c669377d69\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC007\n    @allure.title('Label a Card')\n    def test_label_card(self, driver):\n        time.sleep(4)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open a board and select a card'):\n            try:\n                WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n                WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, self.SCC.Board.LIST_TITLE))).click()\n                driver.find_element(By.XPATH, self.SCC.List.ADD_A_CARD_BUTTON).click()\n                driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).click()\n                time.sleep(1)\n                driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).send_keys('new_card')\n                driver.find_element(By.XPATH, self.SCC.List.ADD_CARD_SUBMIT_BUTTOMN).click()\n                time.sleep(3)\n            except Exception as e:\n                log.info(\"An error occurred: \", str(e))\n    \n        with allure.step('Click the card to open and archive it'):\n            driver.find_element(By.XPATH, self.SCC.List.CARD_TO_ARCHIVE).click()\n            WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABELS_BUTTON))).click()\n            time.sleep(2)\n>           WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n\ntests/regression_ui/test_ui_regression.py:242: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdd04daf7d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55b356ce8896 \\\\u003Cunknown>\\\\n#22 0x7fa90169caa4 \\\\u003Cunknown>\\\\n#23 0x7fa901729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 176). Other element would receive the click: <div class=\"SHSLu7GBXRGV83\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55b356ce9a1a <unknown>\nE       #1 0x55b3567a1390 <unknown>\nE       #2 0x55b3567f9afc <unknown>\nE       #3 0x55b3567f795c <unknown>\nE       #4 0x55b3567f4ff2 <unknown>\nE       #5 0x55b3567f46f0 <unknown>\nE       #6 0x55b3567e6e0d <unknown>\nE       #7 0x55b356818bd2 <unknown>\nE       #8 0x55b3567e678a <unknown>\nE       #9 0x55b356818d9e <unknown>\nE       #10 0x55b35683f07b <unknown>\nE       #11 0x55b3568189a3 <unknown>\nE       #12 0x55b3567e460e <unknown>\nE       #13 0x55b3567e5dd1 <unknown>\nE       #14 0x55b356cafddb <unknown>\nE       #15 0x55b356cb3cbc <unknown>\nE       #16 0x55b356c97392 <unknown>\nE       #17 0x55b356cb4834 <unknown>\nE       #18 0x55b356c7b1ef <unknown>\nE       #19 0x55b356cd8038 <unknown>\nE       #20 0x55b356cd8216 <unknown>\nE       #21 0x55b356ce8896 <unknown>\nE       #22 0x7fa90169caa4 <unknown>\nE       #23 0x7fa901729c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1742991624686,"stop":1742991625013,"duration":327},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1742991625014,"stop":1742991625014,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 176). Other element would receive the click: <div class=\"SHSLu7GBXRGV83\">...</div>\n  (Session info: chrome=134.0.6998.165)\nStacktrace:\n#0 0x55b356ce9a1a <unknown>\n#1 0x55b3567a1390 <unknown>\n#2 0x55b3567f9afc <unknown>\n#3 0x55b3567f795c <unknown>\n#4 0x55b3567f4ff2 <unknown>\n#5 0x55b3567f46f0 <unknown>\n#6 0x55b3567e6e0d <unknown>\n#7 0x55b356818bd2 <unknown>\n#8 0x55b3567e678a <unknown>\n#9 0x55b356818d9e <unknown>\n#10 0x55b35683f07b <unknown>\n#11 0x55b3568189a3 <unknown>\n#12 0x55b3567e460e <unknown>\n#13 0x55b3567e5dd1 <unknown>\n#14 0x55b356cafddb <unknown>\n#15 0x55b356cb3cbc <unknown>\n#16 0x55b356c97392 <unknown>\n#17 0x55b356cb4834 <unknown>\n#18 0x55b356c7b1ef <unknown>\n#19 0x55b356cd8038 <unknown>\n#20 0x55b356cd8216 <unknown>\n#21 0x55b356ce8896 <unknown>\n#22 0x7fa90169caa4 <unknown>\n#23 0x7fa901729c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7fdd04daa9c0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae01e514b620970b84b6d8c669377d69\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC007\n    @allure.title('Label a Card')\n    def test_label_card(self, driver):\n        time.sleep(4)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open a board and select a card'):\n            try:\n                WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n                WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, self.SCC.Board.LIST_TITLE))).click()\n                driver.find_element(By.XPATH, self.SCC.List.ADD_A_CARD_BUTTON).click()\n                driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).click()\n                time.sleep(1)\n                driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).send_keys('new_card')\n                driver.find_element(By.XPATH, self.SCC.List.ADD_CARD_SUBMIT_BUTTOMN).click()\n                time.sleep(3)\n            except Exception as e:\n                log.info(\"An error occurred: \", str(e))\n    \n        with allure.step('Click the card to open and archive it'):\n            driver.find_element(By.XPATH, self.SCC.List.CARD_TO_ARCHIVE).click()\n            WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABELS_BUTTON))).click()\n            time.sleep(2)\n>           WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n\ntests/regression_ui/test_ui_regression.py:242: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fdd04daf7d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55b356ce8896 \\\\u003Cunknown>\\\\n#22 0x7fa90169caa4 \\\\u003Cunknown>\\\\n#23 0x7fa901729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 176). Other element would receive the click: <div class=\"SHSLu7GBXRGV83\">...</div>\nE         (Session info: chrome=134.0.6998.165)\nE       Stacktrace:\nE       #0 0x55b356ce9a1a <unknown>\nE       #1 0x55b3567a1390 <unknown>\nE       #2 0x55b3567f9afc <unknown>\nE       #3 0x55b3567f795c <unknown>\nE       #4 0x55b3567f4ff2 <unknown>\nE       #5 0x55b3567f46f0 <unknown>\nE       #6 0x55b3567e6e0d <unknown>\nE       #7 0x55b356818bd2 <unknown>\nE       #8 0x55b3567e678a <unknown>\nE       #9 0x55b356818d9e <unknown>\nE       #10 0x55b35683f07b <unknown>\nE       #11 0x55b3568189a3 <unknown>\nE       #12 0x55b3567e460e <unknown>\nE       #13 0x55b3567e5dd1 <unknown>\nE       #14 0x55b356cafddb <unknown>\nE       #15 0x55b356cb3cbc <unknown>\nE       #16 0x55b356c97392 <unknown>\nE       #17 0x55b356cb4834 <unknown>\nE       #18 0x55b356c7b1ef <unknown>\nE       #19 0x55b356cd8038 <unknown>\nE       #20 0x55b356cd8216 <unknown>\nE       #21 0x55b356ce8896 <unknown>\nE       #22 0x7fa90169caa4 <unknown>\nE       #23 0x7fa901729c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","steps":[{"name":"Log in to Trello account","time":{"start":1742991629014,"stop":1742991635033,"duration":6019},"status":"passed","steps":[{"name":"Navigate to the Trello page and enter valid credentials (email, password, and 6-digits verification code)","time":{"start":1742991629014,"stop":1742991635033,"duration":6019},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Open a board and select a card","time":{"start":1742991635033,"stop":1742991640541,"duration":5508},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click the card to open and archive it","time":{"start":1742991640541,"stop":1742991644918,"duration":4377},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 176). Other element would receive the click: <div class=\"SHSLu7GBXRGV83\">...</div>\n  (Session info: chrome=134.0.6998.165)\nStacktrace:\n#0 0x55b356ce9a1a <unknown>\n#1 0x55b3567a1390 <unknown>\n#2 0x55b3567f9afc <unknown>\n#3 0x55b3567f795c <unknown>\n#4 0x55b3567f4ff2 <unknown>\n#5 0x55b3567f46f0 <unknown>\n#6 0x55b3567e6e0d <unknown>\n#7 0x55b356818bd2 <unknown>\n#8 0x55b3567e678a <unknown>\n#9 0x55b356818d9e <unknown>\n#10 0x55b35683f07b <unknown>\n#11 0x55b3568189a3 <unknown>\n#12 0x55b3567e460e <unknown>\n#13 0x55b3567e5dd1 <unknown>\n#14 0x55b356cafddb <unknown>\n#15 0x55b356cb3cbc <unknown>\n#16 0x55b356c97392 <unknown>\n#17 0x55b356cb4834 <unknown>\n#18 0x55b356c7b1ef <unknown>\n#19 0x55b356cd8038 <unknown>\n#20 0x55b356cd8216 <unknown>\n#21 0x55b356ce8896 <unknown>\n#22 0x7fa90169caa4 <unknown>\n#23 0x7fa901729c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 242, in test_label_card\n    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1742991644952,"stop":1742991645025,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"TC007"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az1979-395"},{"name":"thread","value":"4146-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"history":{"statistic":{"failed":0,"broken":34,"skipped":0,"passed":563,"unknown":0,"total":597},"items":[{"uid":"2244b7309a25a434","status":"passed","time":{"start":1742980352320,"stop":1742980375224,"duration":22904}},{"uid":"6d2a44f07241c33a","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[contains(text(), 'new_card')]\"}\n  (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x559957158a1a <unknown>\n#1 0x559956c10390 <unknown>\n#2 0x559956c61c85 <unknown>\n#3 0x559956c61eb1 <unknown>\n#4 0x559956cb0d64 <unknown>\n#5 0x559956c87bfd <unknown>\n#6 0x559956cae07b <unknown>\n#7 0x559956c879a3 <unknown>\n#8 0x559956c5360e <unknown>\n#9 0x559956c54dd1 <unknown>\n#10 0x55995711eddb <unknown>\n#11 0x559957122cbc <unknown>\n#12 0x559957106392 <unknown>\n#13 0x559957123834 <unknown>\n#14 0x5599570ea1ef <unknown>\n#15 0x559957147038 <unknown>\n#16 0x559957147216 <unknown>\n#17 0x559957157896 <unknown>\n#18 0x7f8292e9caa4 <unknown>\n#19 0x7f8292f29c3c <unknown>","time":{"start":1742969746846,"stop":1742969767004,"duration":20158}},{"uid":"c5dfbda44b786637","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[contains(text(), 'new_card')]\"}\n  (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55f865331a1a <unknown>\n#1 0x55f864de9390 <unknown>\n#2 0x55f864e3ac85 <unknown>\n#3 0x55f864e3aeb1 <unknown>\n#4 0x55f864e89d64 <unknown>\n#5 0x55f864e60bfd <unknown>\n#6 0x55f864e8707b <unknown>\n#7 0x55f864e609a3 <unknown>\n#8 0x55f864e2c60e <unknown>\n#9 0x55f864e2ddd1 <unknown>\n#10 0x55f8652f7ddb <unknown>\n#11 0x55f8652fbcbc <unknown>\n#12 0x55f8652df392 <unknown>\n#13 0x55f8652fc834 <unknown>\n#14 0x55f8652c31ef <unknown>\n#15 0x55f865320038 <unknown>\n#16 0x55f865320216 <unknown>\n#17 0x55f865330896 <unknown>\n#18 0x7f9a3929caa4 <unknown>\n#19 0x7f9a39329c3c <unknown>","time":{"start":1742959604460,"stop":1742959625201,"duration":20741}},{"uid":"dbac339773b83b58","status":"passed","time":{"start":1742949977104,"stop":1742950005085,"duration":27981}},{"uid":"46dc7129f263b09f","status":"passed","time":{"start":1742937043293,"stop":1742937076179,"duration":32886}},{"uid":"d9cd868039c7b629","status":"passed","time":{"start":1742926543748,"stop":1742926576644,"duration":32896}},{"uid":"4996123bc55c20e4","status":"passed","time":{"start":1742915535299,"stop":1742915569555,"duration":34256}},{"uid":"9a8def32b872ddc0","status":"passed","time":{"start":1742905185814,"stop":1742905219342,"duration":33528}},{"uid":"2a02e13248072ee0","status":"passed","time":{"start":1742893966754,"stop":1742893999616,"duration":32862}},{"uid":"6fd6bcef652a8f0c","status":"passed","time":{"start":1742883376562,"stop":1742883409611,"duration":33049}},{"uid":"857e14c3c422d7d4","status":"passed","time":{"start":1742873269573,"stop":1742873296922,"duration":27349}},{"uid":"569db964a2dc8ab2","status":"passed","time":{"start":1742863547960,"stop":1742863575444,"duration":27484}},{"uid":"88ca39f8f44b48a5","status":"passed","time":{"start":1742850674740,"stop":1742850707785,"duration":33045}},{"uid":"60e94dd937c00fa0","status":"passed","time":{"start":1742840144206,"stop":1742840176872,"duration":32666}},{"uid":"6aae2eaca01959d0","status":"passed","time":{"start":1742829163933,"stop":1742829197423,"duration":33490}},{"uid":"bf4572e762757013","status":"passed","time":{"start":1742818874468,"stop":1742818907779,"duration":33311}},{"uid":"c4ca9f840c811a99","status":"passed","time":{"start":1742807683735,"stop":1742807717085,"duration":33350}},{"uid":"f52666eb188862ed","status":"passed","time":{"start":1742797036345,"stop":1742797069461,"duration":33116}},{"uid":"7b4fca251eff3f51","status":"passed","time":{"start":1742787104081,"stop":1742787137671,"duration":33590}},{"uid":"41b5034a7a2f81fb","status":"passed","time":{"start":1742777385942,"stop":1742777419770,"duration":33828}}]},"tags":["TC007","TC000"]},"source":"47a54f3db392fdcf.json","parameterValues":[]}