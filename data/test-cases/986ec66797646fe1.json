{"uid":"986ec66797646fe1","name":"Drag and drop card from one list to another","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_drag_n_drop_card","historyId":"58c27d4ea8138de64fd4e105da17ea92","time":{"start":1738703279437,"stop":1738703279437,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55a3e97bcdca <unknown>\n#1 0x55a3e92b33f0 <unknown>\n#2 0x55a3e92ea47a <unknown>\n#3 0x55a3e92e69b6 <unknown>\n#4 0x55a3e9333ca6 <unknown>\n#5 0x55a3e93332f6 <unknown>\n#6 0x55a3e9327833 <unknown>\n#7 0x55a3e92f45a0 <unknown>\n#8 0x55a3e92f5ece <unknown>\n#9 0x55a3e9786bdb <unknown>\n#10 0x55a3e978ab67 <unknown>\n#11 0x55a3e97723bc <unknown>\n#12 0x55a3e978b727 <unknown>\n#13 0x55a3e975674f <unknown>\n#14 0x55a3e97ab938 <unknown>\n#15 0x55a3e97abb00 <unknown>\n#16 0x55a3e97bbc46 <unknown>\n#17 0x7f139a09ca94 <unknown>\n#18 0x7f139a129c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0466f0>\nrequest = <SubRequest 'driver' for <Function test_drag_n_drop_card>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df098980>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55a3e97bbc46 \\\\u003Cunknown>\\\\n#17 0x7f139a09ca94 \\\\u003Cunknown>\\\\n#18 0x7f139a129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55a3e97bcdca <unknown>\nE       #1 0x55a3e92b33f0 <unknown>\nE       #2 0x55a3e92ea47a <unknown>\nE       #3 0x55a3e92e69b6 <unknown>\nE       #4 0x55a3e9333ca6 <unknown>\nE       #5 0x55a3e93332f6 <unknown>\nE       #6 0x55a3e9327833 <unknown>\nE       #7 0x55a3e92f45a0 <unknown>\nE       #8 0x55a3e92f5ece <unknown>\nE       #9 0x55a3e9786bdb <unknown>\nE       #10 0x55a3e978ab67 <unknown>\nE       #11 0x55a3e97723bc <unknown>\nE       #12 0x55a3e978b727 <unknown>\nE       #13 0x55a3e975674f <unknown>\nE       #14 0x55a3e97ab938 <unknown>\nE       #15 0x55a3e97abb00 <unknown>\nE       #16 0x55a3e97bbc46 <unknown>\nE       #17 0x7f139a09ca94 <unknown>\nE       #18 0x7f139a129c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1738703279438,"stop":1738703279616,"duration":178},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55a3e97bcdca <unknown>\n#1 0x55a3e92b33f0 <unknown>\n#2 0x55a3e92ea47a <unknown>\n#3 0x55a3e92e69b6 <unknown>\n#4 0x55a3e9333ca6 <unknown>\n#5 0x55a3e93332f6 <unknown>\n#6 0x55a3e9327833 <unknown>\n#7 0x55a3e92f45a0 <unknown>\n#8 0x55a3e92f5ece <unknown>\n#9 0x55a3e9786bdb <unknown>\n#10 0x55a3e978ab67 <unknown>\n#11 0x55a3e97723bc <unknown>\n#12 0x55a3e978b727 <unknown>\n#13 0x55a3e975674f <unknown>\n#14 0x55a3e97ab938 <unknown>\n#15 0x55a3e97abb00 <unknown>\n#16 0x55a3e97bbc46 <unknown>\n#17 0x7f139a09ca94 <unknown>\n#18 0x7f139a129c3c <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 46, in driver\n    driver = webdriver.Chrome(options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 241, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 329, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55a3e97bcdca <unknown>\n#1 0x55a3e92b33f0 <unknown>\n#2 0x55a3e92ea47a <unknown>\n#3 0x55a3e92e69b6 <unknown>\n#4 0x55a3e9333ca6 <unknown>\n#5 0x55a3e93332f6 <unknown>\n#6 0x55a3e9327833 <unknown>\n#7 0x55a3e92f45a0 <unknown>\n#8 0x55a3e92f5ece <unknown>\n#9 0x55a3e9786bdb <unknown>\n#10 0x55a3e978ab67 <unknown>\n#11 0x55a3e97723bc <unknown>\n#12 0x55a3e978b727 <unknown>\n#13 0x55a3e975674f <unknown>\n#14 0x55a3e97ab938 <unknown>\n#15 0x55a3e97abb00 <unknown>\n#16 0x55a3e97bbc46 <unknown>\n#17 0x7f139a09ca94 <unknown>\n#18 0x7f139a129c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0466f0>\nrequest = <SubRequest 'driver' for <Function test_drag_n_drop_card>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df098980>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55a3e97bbc46 \\\\u003Cunknown>\\\\n#17 0x7f139a09ca94 \\\\u003Cunknown>\\\\n#18 0x7f139a129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55a3e97bcdca <unknown>\nE       #1 0x55a3e92b33f0 <unknown>\nE       #2 0x55a3e92ea47a <unknown>\nE       #3 0x55a3e92e69b6 <unknown>\nE       #4 0x55a3e9333ca6 <unknown>\nE       #5 0x55a3e93332f6 <unknown>\nE       #6 0x55a3e9327833 <unknown>\nE       #7 0x55a3e92f45a0 <unknown>\nE       #8 0x55a3e92f5ece <unknown>\nE       #9 0x55a3e9786bdb <unknown>\nE       #10 0x55a3e978ab67 <unknown>\nE       #11 0x55a3e97723bc <unknown>\nE       #12 0x55a3e978b727 <unknown>\nE       #13 0x55a3e975674f <unknown>\nE       #14 0x55a3e97ab938 <unknown>\nE       #15 0x55a3e97abb00 <unknown>\nE       #16 0x55a3e97bbc46 <unknown>\nE       #17 0x7f139a09ca94 <unknown>\nE       #18 0x7f139a129c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","steps":[],"attachments":[{"uid":"da6cfa83f11ece02","name":"log","source":"da6cfa83f11ece02.txt","type":"text/plain","size":360}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"TC005"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az2027-548"},{"name":"thread","value":"4040-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":13,"skipped":0,"passed":187,"unknown":0,"total":206},"items":[{"uid":"a675dbff20bb5a6d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5576d9632dca <unknown>\n#1 0x5576d91293f0 <unknown>\n#2 0x5576d917910c <unknown>\n#3 0x5576d9179331 <unknown>\n#4 0x5576d91bf154 <unknown>\n#5 0x5576d919dabd <unknown>\n#6 0x5576d91bc4b3 <unknown>\n#7 0x5576d919d833 <unknown>\n#8 0x5576d916a5a0 <unknown>\n#9 0x5576d916bece <unknown>\n#10 0x5576d95fcbdb <unknown>\n#11 0x5576d9600b67 <unknown>\n#12 0x5576d95e83bc <unknown>\n#13 0x5576d9601727 <unknown>\n#14 0x5576d95cc74f <unknown>\n#15 0x5576d9621938 <unknown>\n#16 0x5576d9621b00 <unknown>\n#17 0x5576d9631c46 <unknown>\n#18 0x7faab749ca94 <unknown>\n#19 0x7faab7529c3c <unknown>","time":{"start":1738697737662,"stop":1738697761933,"duration":24271}},{"uid":"c1dc8ed445f70c83","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55af62d08dca <unknown>\n#1 0x55af627ff3f0 <unknown>\n#2 0x55af6284f10c <unknown>\n#3 0x55af6284f331 <unknown>\n#4 0x55af62895154 <unknown>\n#5 0x55af62873abd <unknown>\n#6 0x55af628924b3 <unknown>\n#7 0x55af62873833 <unknown>\n#8 0x55af628405a0 <unknown>\n#9 0x55af62841ece <unknown>\n#10 0x55af62cd2bdb <unknown>\n#11 0x55af62cd6b67 <unknown>\n#12 0x55af62cbe3bc <unknown>\n#13 0x55af62cd7727 <unknown>\n#14 0x55af62ca274f <unknown>\n#15 0x55af62cf7938 <unknown>\n#16 0x55af62cf7b00 <unknown>\n#17 0x55af62d07c46 <unknown>\n#18 0x7fe8b229ca94 <unknown>\n#19 0x7fe8b2329c3c <unknown>","time":{"start":1738692876784,"stop":1738692901052,"duration":24268}},{"uid":"b40c5642e8f717b5","status":"passed","time":{"start":1738681812279,"stop":1738681842611,"duration":30332}},{"uid":"b3aa3defc886149f","status":"passed","time":{"start":1738671433591,"stop":1738671464513,"duration":30922}},{"uid":"eb6c64f04075736c","status":"passed","time":{"start":1738660270834,"stop":1738660301367,"duration":30533}},{"uid":"fc43388468788081","status":"passed","time":{"start":1738649742041,"stop":1738649773040,"duration":30999}},{"uid":"49aec62233910f68","status":"passed","time":{"start":1738630111727,"stop":1738630141517,"duration":29790}},{"uid":"8266b6f139914d99","status":"failed","statusDetails":"AssertionError: assert '.github/workflows/.yml' == 'new_card'\n  \n  - new_card\n  + .github/workflows/.yml","time":{"start":1738617098837,"stop":1738617128881,"duration":30044}},{"uid":"e5798acc9d694bec","status":"passed","time":{"start":1738606538935,"stop":1738606568764,"duration":29829}},{"uid":"ec92d83035910bc6","status":"passed","time":{"start":1738595539889,"stop":1738595569817,"duration":29928}},{"uid":"26d9a9fdb254ae88","status":"passed","time":{"start":1738585295414,"stop":1738585325212,"duration":29798}},{"uid":"72d14c9a6d2e6c7b","status":"passed","time":{"start":1738574034652,"stop":1738574064495,"duration":29843}},{"uid":"5e3e9afbc9d84824","status":"passed","time":{"start":1738563391119,"stop":1738563420922,"duration":29803}},{"uid":"1fa413350ab289f4","status":"passed","time":{"start":1738552565255,"stop":1738552595307,"duration":30052}},{"uid":"b435e5dfc1f301ca","status":"passed","time":{"start":1738543791692,"stop":1738543822011,"duration":30319}},{"uid":"fcc37b21cf823e24","status":"passed","time":{"start":1738530617226,"stop":1738530647358,"duration":30132}},{"uid":"68913e55785a65de","status":"passed","time":{"start":1738520033271,"stop":1738520063108,"duration":29837}},{"uid":"70a843dcca20eabc","status":"passed","time":{"start":1738509121095,"stop":1738509151333,"duration":30238}},{"uid":"98b4250c13dff077","status":"passed","time":{"start":1738498664146,"stop":1738498694047,"duration":29901}},{"uid":"1432be9e4c5af33d","status":"passed","time":{"start":1738487460647,"stop":1738487490503,"duration":29856}}]},"tags":["TC005","TC000"]},"source":"986ec66797646fe1.json","parameterValues":[]}