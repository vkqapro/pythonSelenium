{"uid":"de4b7e1ef3bedce6","name":"Label a Card","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_label_card","historyId":"81bf587fe9f2db9e87ee2dc06e7308b0","time":{"start":1736447030328,"stop":1736447062201,"duration":31873},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\n  (Session info: chrome=131.0.6778.264)\nStacktrace:\n#0 0x55b56360e8fa <unknown>\n#1 0x55b56311fd20 <unknown>\n#2 0x55b563175766 <unknown>\n#3 0x55b5631736cd <unknown>\n#4 0x55b563170de5 <unknown>\n#5 0x55b56316ffa8 <unknown>\n#6 0x55b563163765 <unknown>\n#7 0x55b563192af2 <unknown>\n#8 0x55b5631630a8 <unknown>\n#9 0x55b563192cbe <unknown>\n#10 0x55b5631b1560 <unknown>\n#11 0x55b563192893 <unknown>\n#12 0x55b56316130d <unknown>\n#13 0x55b56316232e <unknown>\n#14 0x55b5635db00b <unknown>\n#15 0x55b5635def97 <unknown>\n#16 0x55b5635c771c <unknown>\n#17 0x55b5635dfb17 <unknown>\n#18 0x55b5635ac6cf <unknown>\n#19 0x55b5635fd6b8 <unknown>\n#20 0x55b5635fd880 <unknown>\n#21 0x55b56360d776 <unknown>\n#22 0x7fc60fc9ca94 <unknown>\n#23 0x7fc60fd29c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f7c0a3aa6c0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e7c63384a5fc3ad87ed2cc99b0eb8e5\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC007\n    @allure.title('Label a Card')\n    def test_label_card(self, driver):\n        time.sleep(4)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open a board and select a card'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n            WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, self.SCC.Board.LIST_TITLE))).click()\n            driver.find_element(By.XPATH, self.SCC.List.ADD_A_CARD_BUTTON).click()\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).click()\n            time.sleep(1)\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).send_keys('new_card')\n            driver.find_element(By.XPATH, self.SCC.List.ADD_CARD_SUBMIT_BUTTOMN).click()\n            time.sleep(3)\n    \n        with allure.step('Click the card to open and archive it'):\n            driver.find_element(By.XPATH, self.SCC.List.CARD_TO_ARCHIVE).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABELS_BUTTON))).click()\n            time.sleep(2)\n>           WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n\ntests/regression_ui/test_ui_regression.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7c0a3fcb60>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55b56360d776 \\\\u003Cunknown>\\\\n#22 0x7fc60fc9ca94 \\\\u003Cunknown>\\\\n#23 0x7fc60fd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\nE         (Session info: chrome=131.0.6778.264)\nE       Stacktrace:\nE       #0 0x55b56360e8fa <unknown>\nE       #1 0x55b56311fd20 <unknown>\nE       #2 0x55b563175766 <unknown>\nE       #3 0x55b5631736cd <unknown>\nE       #4 0x55b563170de5 <unknown>\nE       #5 0x55b56316ffa8 <unknown>\nE       #6 0x55b563163765 <unknown>\nE       #7 0x55b563192af2 <unknown>\nE       #8 0x55b5631630a8 <unknown>\nE       #9 0x55b563192cbe <unknown>\nE       #10 0x55b5631b1560 <unknown>\nE       #11 0x55b563192893 <unknown>\nE       #12 0x55b56316130d <unknown>\nE       #13 0x55b56316232e <unknown>\nE       #14 0x55b5635db00b <unknown>\nE       #15 0x55b5635def97 <unknown>\nE       #16 0x55b5635c771c <unknown>\nE       #17 0x55b5635dfb17 <unknown>\nE       #18 0x55b5635ac6cf <unknown>\nE       #19 0x55b5635fd6b8 <unknown>\nE       #20 0x55b5635fd880 <unknown>\nE       #21 0x55b56360d776 <unknown>\nE       #22 0x7fc60fc9ca94 <unknown>\nE       #23 0x7fc60fd29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1736447030072,"stop":1736447030327,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736447030328,"stop":1736447030328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\n  (Session info: chrome=131.0.6778.264)\nStacktrace:\n#0 0x55b56360e8fa <unknown>\n#1 0x55b56311fd20 <unknown>\n#2 0x55b563175766 <unknown>\n#3 0x55b5631736cd <unknown>\n#4 0x55b563170de5 <unknown>\n#5 0x55b56316ffa8 <unknown>\n#6 0x55b563163765 <unknown>\n#7 0x55b563192af2 <unknown>\n#8 0x55b5631630a8 <unknown>\n#9 0x55b563192cbe <unknown>\n#10 0x55b5631b1560 <unknown>\n#11 0x55b563192893 <unknown>\n#12 0x55b56316130d <unknown>\n#13 0x55b56316232e <unknown>\n#14 0x55b5635db00b <unknown>\n#15 0x55b5635def97 <unknown>\n#16 0x55b5635c771c <unknown>\n#17 0x55b5635dfb17 <unknown>\n#18 0x55b5635ac6cf <unknown>\n#19 0x55b5635fd6b8 <unknown>\n#20 0x55b5635fd880 <unknown>\n#21 0x55b56360d776 <unknown>\n#22 0x7fc60fc9ca94 <unknown>\n#23 0x7fc60fd29c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f7c0a3aa6c0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e7c63384a5fc3ad87ed2cc99b0eb8e5\")>\n\n    @pytest.mark.TC000\n    @pytest.mark.TC007\n    @allure.title('Label a Card')\n    def test_label_card(self, driver):\n        time.sleep(4)\n        with allure.step('Log in to Trello account'):\n            self.test_login(driver)\n    \n        with allure.step('Open a board and select a card'):\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.Board.BOARD_TITLE))).click()\n            WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, self.SCC.Board.LIST_TITLE))).click()\n            driver.find_element(By.XPATH, self.SCC.List.ADD_A_CARD_BUTTON).click()\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).click()\n            time.sleep(1)\n            driver.find_element(By.XPATH, self.SCC.List.CARD_NAME_FIELD).send_keys('new_card')\n            driver.find_element(By.XPATH, self.SCC.List.ADD_CARD_SUBMIT_BUTTOMN).click()\n            time.sleep(3)\n    \n        with allure.step('Click the card to open and archive it'):\n            driver.find_element(By.XPATH, self.SCC.List.CARD_TO_ARCHIVE).click()\n            WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABELS_BUTTON))).click()\n            time.sleep(2)\n>           WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n\ntests/regression_ui/test_ui_regression.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7c0a3fcb60>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#21 0x55b56360d776 \\\\u003Cunknown>\\\\n#22 0x7fc60fc9ca94 \\\\u003Cunknown>\\\\n#23 0x7fc60fd29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\nE         (Session info: chrome=131.0.6778.264)\nE       Stacktrace:\nE       #0 0x55b56360e8fa <unknown>\nE       #1 0x55b56311fd20 <unknown>\nE       #2 0x55b563175766 <unknown>\nE       #3 0x55b5631736cd <unknown>\nE       #4 0x55b563170de5 <unknown>\nE       #5 0x55b56316ffa8 <unknown>\nE       #6 0x55b563163765 <unknown>\nE       #7 0x55b563192af2 <unknown>\nE       #8 0x55b5631630a8 <unknown>\nE       #9 0x55b563192cbe <unknown>\nE       #10 0x55b5631b1560 <unknown>\nE       #11 0x55b563192893 <unknown>\nE       #12 0x55b56316130d <unknown>\nE       #13 0x55b56316232e <unknown>\nE       #14 0x55b5635db00b <unknown>\nE       #15 0x55b5635def97 <unknown>\nE       #16 0x55b5635c771c <unknown>\nE       #17 0x55b5635dfb17 <unknown>\nE       #18 0x55b5635ac6cf <unknown>\nE       #19 0x55b5635fd6b8 <unknown>\nE       #20 0x55b5635fd880 <unknown>\nE       #21 0x55b56360d776 <unknown>\nE       #22 0x7fc60fc9ca94 <unknown>\nE       #23 0x7fc60fd29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException","steps":[{"name":"Log in to Trello account","time":{"start":1736447034328,"stop":1736447051881,"duration":17553},"status":"passed","steps":[{"name":"Navigate to the Trello login page","time":{"start":1736447034328,"stop":1736447037736,"duration":3408},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Enter valid credentials (email, password, and 6-digits verification code)","time":{"start":1736447037736,"stop":1736447051881,"duration":14145},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Open a board and select a card","time":{"start":1736447051881,"stop":1736447057979,"duration":6098},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Click the card to open and archive it","time":{"start":1736447057979,"stop":1736447062199,"duration":4220},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\n  (Session info: chrome=131.0.6778.264)\nStacktrace:\n#0 0x55b56360e8fa <unknown>\n#1 0x55b56311fd20 <unknown>\n#2 0x55b563175766 <unknown>\n#3 0x55b5631736cd <unknown>\n#4 0x55b563170de5 <unknown>\n#5 0x55b56316ffa8 <unknown>\n#6 0x55b563163765 <unknown>\n#7 0x55b563192af2 <unknown>\n#8 0x55b5631630a8 <unknown>\n#9 0x55b563192cbe <unknown>\n#10 0x55b5631b1560 <unknown>\n#11 0x55b563192893 <unknown>\n#12 0x55b56316130d <unknown>\n#13 0x55b56316232e <unknown>\n#14 0x55b5635db00b <unknown>\n#15 0x55b5635def97 <unknown>\n#16 0x55b5635c771c <unknown>\n#17 0x55b5635dfb17 <unknown>\n#18 0x55b5635ac6cf <unknown>\n#19 0x55b5635fd6b8 <unknown>\n#20 0x55b5635fd880 <unknown>\n#21 0x55b56360d776 <unknown>\n#22 0x7fc60fc9ca94 <unknown>\n#23 0x7fc60fd29c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 234, in test_label_card\n    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, self.SCC.List.LABEL_GREEN))).click()\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bde8c78595808e7e","name":"log","source":"bde8c78595808e7e.txt","type":"text/plain","size":50777}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1736447062231,"stop":1736447062309,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"TC007"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az2035-129"},{"name":"thread","value":"3594-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":63,"unknown":0,"total":73},"items":[{"uid":"246c2f85567dd127","status":"passed","time":{"start":1736384769692,"stop":1736384803768,"duration":34076}},{"uid":"6428b76ba31a9cea","status":"passed","time":{"start":1736360501418,"stop":1736360535512,"duration":34094}},{"uid":"78b24368cd0aad49","status":"passed","time":{"start":1736298391349,"stop":1736298425549,"duration":34200}},{"uid":"ea517b81d9efbf35","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"CNnougcEO0WaO3 dw6dSeDTUO7W7U YjsahfcWMjpk4W IDeXAnQiLBnlva color-blind-pattern-green MNuX_OT6g8BvrC\" tabindex=\"-1\" aria-label=\"Color: green, title: none\" data-color=\"green\" data-expanded=\"false\" data-testid=\"compact-card-label\"></span> is not clickable at point (596, 220). Other element would receive the click: <hgroup class=\"behMG2dkwmEg47\">...</hgroup>\n  (Session info: chrome=131.0.6778.204)\nStacktrace:\n#0 0x5577809d731a <unknown>\n#1 0x5577804ed6e0 <unknown>\n#2 0x5577805430f6 <unknown>\n#3 0x55778054105d <unknown>\n#4 0x55778053e775 <unknown>\n#5 0x55778053d92f <unknown>\n#6 0x5577805310d5 <unknown>\n#7 0x557780560462 <unknown>\n#8 0x557780530a18 <unknown>\n#9 0x55778056062e <unknown>\n#10 0x55778057eed7 <unknown>\n#11 0x557780560203 <unknown>\n#12 0x55778052ecc0 <unknown>\n#13 0x55778052fc9e <unknown>\n#14 0x5577809a4d0b <unknown>\n#15 0x5577809a8c92 <unknown>\n#16 0x557780991b3c <unknown>\n#17 0x5577809a9807 <unknown>\n#18 0x5577809770df <unknown>\n#19 0x5577809c6578 <unknown>\n#20 0x5577809c6740 <unknown>\n#21 0x5577809d6196 <unknown>\n#22 0x7f97bf09ca94 <unknown>\n#23 0x7f97bf129c3c <unknown>","time":{"start":1736274120761,"stop":1736274152619,"duration":31858}},{"uid":"2f888b0003aa3956","status":"passed","time":{"start":1736212006522,"stop":1736212040607,"duration":34085}},{"uid":"1dc0b8860b1a7d8d","status":"passed","time":{"start":1736187708177,"stop":1736187742349,"duration":34172}},{"uid":"20adffca70195a73","status":"passed","time":{"start":1736125751958,"stop":1736125785922,"duration":33964}},{"uid":"69cbe480eb40052f","status":"passed","time":{"start":1736101175026,"stop":1736101209165,"duration":34139}},{"uid":"de11eab3ad3cf9a7","status":"passed","time":{"start":1736039478104,"stop":1736039512119,"duration":34015}},{"uid":"9e19328abb19022d","status":"passed","time":{"start":1736014803253,"stop":1736014837237,"duration":33984}},{"uid":"1b9713a11be06e1b","status":"passed","time":{"start":1735952708787,"stop":1735952742600,"duration":33813}},{"uid":"ad4ddc3dd284aeef","status":"passed","time":{"start":1735928555006,"stop":1735928589219,"duration":34213}},{"uid":"2edd9d0e4df7a4c3","status":"passed","time":{"start":1735866375547,"stop":1735866409612,"duration":34065}},{"uid":"36360d00395aa98b","status":"passed","time":{"start":1735842148166,"stop":1735842182286,"duration":34120}},{"uid":"a191ab452b525a61","status":"passed","time":{"start":1735779938019,"stop":1735779972009,"duration":33990}},{"uid":"b09bfbaca0933e77","status":"passed","time":{"start":1735755650098,"stop":1735755683999,"duration":33901}},{"uid":"d450857c25749d6d","status":"passed","time":{"start":1735693943070,"stop":1735693977125,"duration":34055}},{"uid":"9586dcf32c47a546","status":"passed","time":{"start":1735669225344,"stop":1735669259293,"duration":33949}},{"uid":"ff4a6cb1064eab1c","status":"passed","time":{"start":1735607140934,"stop":1735607175066,"duration":34132}},{"uid":"e86f2ba812fcd5f1","status":"passed","time":{"start":1735582880484,"stop":1735582914552,"duration":34068}}]},"tags":["TC007","TC000"]},"source":"de4b7e1ef3bedce6.json","parameterValues":[]}