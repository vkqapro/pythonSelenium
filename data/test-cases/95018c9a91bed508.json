{"uid":"95018c9a91bed508","name":"Card Creation","fullName":"tests.regression_ui.test_ui_regression.TestUIRegression#test_card_creation","historyId":"37b04428e9c82a14933f1043cf15ed79","time":{"start":1738703279219,"stop":1738703279219,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55db37c05dca <unknown>\n#1 0x55db376fc3f0 <unknown>\n#2 0x55db3773347a <unknown>\n#3 0x55db3772f9b6 <unknown>\n#4 0x55db3777cca6 <unknown>\n#5 0x55db3777c2f6 <unknown>\n#6 0x55db37770833 <unknown>\n#7 0x55db3773d5a0 <unknown>\n#8 0x55db3773eece <unknown>\n#9 0x55db37bcfbdb <unknown>\n#10 0x55db37bd3b67 <unknown>\n#11 0x55db37bbb3bc <unknown>\n#12 0x55db37bd4727 <unknown>\n#13 0x55db37b9f74f <unknown>\n#14 0x55db37bf4938 <unknown>\n#15 0x55db37bf4b00 <unknown>\n#16 0x55db37c04c46 <unknown>\n#17 0x7f926e49ca94 <unknown>\n#18 0x7f926e529c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0465a0>\nrequest = <SubRequest 'driver' for <Function test_card_creation>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df04bf80>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55db37c04c46 \\\\u003Cunknown>\\\\n#17 0x7f926e49ca94 \\\\u003Cunknown>\\\\n#18 0x7f926e529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55db37c05dca <unknown>\nE       #1 0x55db376fc3f0 <unknown>\nE       #2 0x55db3773347a <unknown>\nE       #3 0x55db3772f9b6 <unknown>\nE       #4 0x55db3777cca6 <unknown>\nE       #5 0x55db3777c2f6 <unknown>\nE       #6 0x55db37770833 <unknown>\nE       #7 0x55db3773d5a0 <unknown>\nE       #8 0x55db3773eece <unknown>\nE       #9 0x55db37bcfbdb <unknown>\nE       #10 0x55db37bd3b67 <unknown>\nE       #11 0x55db37bbb3bc <unknown>\nE       #12 0x55db37bd4727 <unknown>\nE       #13 0x55db37b9f74f <unknown>\nE       #14 0x55db37bf4938 <unknown>\nE       #15 0x55db37bf4b00 <unknown>\nE       #16 0x55db37c04c46 <unknown>\nE       #17 0x7f926e49ca94 <unknown>\nE       #18 0x7f926e529c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1738703279220,"stop":1738703279398,"duration":178},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55db37c05dca <unknown>\n#1 0x55db376fc3f0 <unknown>\n#2 0x55db3773347a <unknown>\n#3 0x55db3772f9b6 <unknown>\n#4 0x55db3777cca6 <unknown>\n#5 0x55db3777c2f6 <unknown>\n#6 0x55db37770833 <unknown>\n#7 0x55db3773d5a0 <unknown>\n#8 0x55db3773eece <unknown>\n#9 0x55db37bcfbdb <unknown>\n#10 0x55db37bd3b67 <unknown>\n#11 0x55db37bbb3bc <unknown>\n#12 0x55db37bd4727 <unknown>\n#13 0x55db37b9f74f <unknown>\n#14 0x55db37bf4938 <unknown>\n#15 0x55db37bf4b00 <unknown>\n#16 0x55db37c04c46 <unknown>\n#17 0x7f926e49ca94 <unknown>\n#18 0x7f926e529c3c <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pythonSelenium/pythonSelenium/tests/regression_ui/test_ui_regression.py\", line 46, in driver\n    driver = webdriver.Chrome(options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 241, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 329, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55db37c05dca <unknown>\n#1 0x55db376fc3f0 <unknown>\n#2 0x55db3773347a <unknown>\n#3 0x55db3772f9b6 <unknown>\n#4 0x55db3777cca6 <unknown>\n#5 0x55db3777c2f6 <unknown>\n#6 0x55db37770833 <unknown>\n#7 0x55db3773d5a0 <unknown>\n#8 0x55db3773eece <unknown>\n#9 0x55db37bcfbdb <unknown>\n#10 0x55db37bd3b67 <unknown>\n#11 0x55db37bbb3bc <unknown>\n#12 0x55db37bd4727 <unknown>\n#13 0x55db37b9f74f <unknown>\n#14 0x55db37bf4938 <unknown>\n#15 0x55db37bf4b00 <unknown>\n#16 0x55db37c04c46 <unknown>\n#17 0x7f926e49ca94 <unknown>\n#18 0x7f926e529c3c <unknown>","statusTrace":"self = <tests.regression_ui.test_ui_regression.TestUIRegression object at 0x7f43df0465a0>\nrequest = <SubRequest 'driver' for <Function test_card_creation>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def driver(self, request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n>       driver = webdriver.Chrome(options=options)\n\ntests/regression_ui/test_ui_regression.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43df04bf80>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55db37c04c46 \\\\u003Cunknown>\\\\n#17 0x7f926e49ca94 \\\\u003Cunknown>\\\\n#18 0x7f926e529c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55db37c05dca <unknown>\nE       #1 0x55db376fc3f0 <unknown>\nE       #2 0x55db3773347a <unknown>\nE       #3 0x55db3772f9b6 <unknown>\nE       #4 0x55db3777cca6 <unknown>\nE       #5 0x55db3777c2f6 <unknown>\nE       #6 0x55db37770833 <unknown>\nE       #7 0x55db3773d5a0 <unknown>\nE       #8 0x55db3773eece <unknown>\nE       #9 0x55db37bcfbdb <unknown>\nE       #10 0x55db37bd3b67 <unknown>\nE       #11 0x55db37bbb3bc <unknown>\nE       #12 0x55db37bd4727 <unknown>\nE       #13 0x55db37b9f74f <unknown>\nE       #14 0x55db37bf4938 <unknown>\nE       #15 0x55db37bf4b00 <unknown>\nE       #16 0x55db37c04c46 <unknown>\nE       #17 0x7f926e49ca94 <unknown>\nE       #18 0x7f926e529c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException","steps":[],"attachments":[{"uid":"667a974199af6262","name":"log","source":"667a974199af6262.txt","type":"text/plain","size":360}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"TC004"},{"name":"tag","value":"TC000"},{"name":"parentSuite","value":"tests.regression_ui"},{"name":"suite","value":"test_ui_regression"},{"name":"subSuite","value":"TestUIRegression"},{"name":"host","value":"fv-az2027-548"},{"name":"thread","value":"4040-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.regression_ui.test_ui_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":196,"unknown":0,"total":207},"items":[{"uid":"5a8ff8f4401e33e8","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556633061dca <unknown>\n#1 0x556632b583f0 <unknown>\n#2 0x556632ba810c <unknown>\n#3 0x556632ba8331 <unknown>\n#4 0x556632bee154 <unknown>\n#5 0x556632bccabd <unknown>\n#6 0x556632beb4b3 <unknown>\n#7 0x556632bcc833 <unknown>\n#8 0x556632b995a0 <unknown>\n#9 0x556632b9aece <unknown>\n#10 0x55663302bbdb <unknown>\n#11 0x55663302fb67 <unknown>\n#12 0x5566330173bc <unknown>\n#13 0x556633030727 <unknown>\n#14 0x556632ffb74f <unknown>\n#15 0x556633050938 <unknown>\n#16 0x556633050b00 <unknown>\n#17 0x556633060c46 <unknown>\n#18 0x7f7ce9c9ca94 <unknown>\n#19 0x7f7ce9d29c3c <unknown>","time":{"start":1738697678043,"stop":1738697737294,"duration":59251}},{"uid":"bbeab1fc8a67fc6b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5622cf776dca <unknown>\n#1 0x5622cf26d3f0 <unknown>\n#2 0x5622cf2bd10c <unknown>\n#3 0x5622cf2bd331 <unknown>\n#4 0x5622cf303154 <unknown>\n#5 0x5622cf2e1abd <unknown>\n#6 0x5622cf3004b3 <unknown>\n#7 0x5622cf2e1833 <unknown>\n#8 0x5622cf2ae5a0 <unknown>\n#9 0x5622cf2afece <unknown>\n#10 0x5622cf740bdb <unknown>\n#11 0x5622cf744b67 <unknown>\n#12 0x5622cf72c3bc <unknown>\n#13 0x5622cf745727 <unknown>\n#14 0x5622cf71074f <unknown>\n#15 0x5622cf765938 <unknown>\n#16 0x5622cf765b00 <unknown>\n#17 0x5622cf775c46 <unknown>\n#18 0x7f3c1809ca94 <unknown>\n#19 0x7f3c18129c3c <unknown>","time":{"start":1738692817378,"stop":1738692876440,"duration":59062}},{"uid":"33c552e4f868fc67","status":"passed","time":{"start":1738681784175,"stop":1738681811858,"duration":27683}},{"uid":"fa5e0c770f88c323","status":"passed","time":{"start":1738671405409,"stop":1738671433179,"duration":27770}},{"uid":"3b5993bc89edef02","status":"passed","time":{"start":1738660242834,"stop":1738660270492,"duration":27658}},{"uid":"91c9ff3cad3dd6c4","status":"passed","time":{"start":1738649713549,"stop":1738649741706,"duration":28157}},{"uid":"dd291ccf6a83aed1","status":"passed","time":{"start":1738630079129,"stop":1738630111403,"duration":32274}},{"uid":"c04dc2ec792df06d","status":"passed","time":{"start":1738617066089,"stop":1738617098498,"duration":32409}},{"uid":"3f18e140524018db","status":"passed","time":{"start":1738606506308,"stop":1738606538614,"duration":32306}},{"uid":"9f22e260aae74b7b","status":"passed","time":{"start":1738595507054,"stop":1738595539558,"duration":32504}},{"uid":"b6e907d84acee944","status":"passed","time":{"start":1738585262745,"stop":1738585295096,"duration":32351}},{"uid":"bd3295555bc70007","status":"passed","time":{"start":1738574002038,"stop":1738574034321,"duration":32283}},{"uid":"98b2e89760bdfed","status":"passed","time":{"start":1738563358352,"stop":1738563390795,"duration":32443}},{"uid":"b56ad6369f403673","status":"passed","time":{"start":1738552532466,"stop":1738552564919,"duration":32453}},{"uid":"94936035fc978182","status":"passed","time":{"start":1738543759107,"stop":1738543791365,"duration":32258}},{"uid":"c8185d5167139d28","status":"passed","time":{"start":1738530584289,"stop":1738530616873,"duration":32584}},{"uid":"563fabfa188aeb7e","status":"passed","time":{"start":1738520000541,"stop":1738520032941,"duration":32400}},{"uid":"580db5872b39e572","status":"passed","time":{"start":1738509088550,"stop":1738509120765,"duration":32215}},{"uid":"254ee99f06a1364e","status":"passed","time":{"start":1738498631392,"stop":1738498663817,"duration":32425}},{"uid":"b682e5e6d13f8b8a","status":"passed","time":{"start":1738487427866,"stop":1738487460310,"duration":32444}}]},"tags":["TC004","TC000"]},"source":"95018c9a91bed508.json","parameterValues":[]}